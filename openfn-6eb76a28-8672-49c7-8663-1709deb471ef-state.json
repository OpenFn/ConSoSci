{
  "id": "6eb76a28-8672-49c7-8663-1709deb471ef",
  "name": "wcs-grievances",
  "description": null,
  "concurrency": null,
  "inserted_at": "2025-03-10T07:35:06Z",
  "updated_at": "2025-03-12T12:56:50Z",
  "project_credentials": {
    "aleksa@openfn.org-Asana-API-Token---AK-WCS-Grievances": {
      "id": "3b707ca8-ef3c-4552-a536-ecb246664a13",
      "name": "Asana API Token - AK WCS Grievances",
      "owner": "aleksa@openfn.org"
    },
    "rediet@openfn.org-WCS-Programs-Database-central-db": {
      "id": "d1550910-dee4-48b0-96f7-351081913e5f",
      "name": "WCS Programs Database central db",
      "owner": "rediet@openfn.org"
    },
    "aleksa@openfn.org-WCS-GRM-Kobo-Account": {
      "id": "f4713092-5fff-4910-b4ff-d3a4f942ad9f",
      "name": "WCS GRM Kobo Account",
      "owner": "aleksa@openfn.org"
    },
    "rediet@openfn.org-Rediet-Googlesheet": {
      "id": "85582b39-fc79-4e5e-9460-cdd276714ea6",
      "name": "Rediet Googlesheet",
      "owner": "rediet@openfn.org"
    },
    "rediet@openfn.org-WCS-GRM-Kobo---RAW-cred": {
      "id": "9516f11a-8ebe-46a0-b864-422bef6b02ed",
      "name": "WCS GRM Kobo - RAW cred",
      "owner": "rediet@openfn.org"
    }
  },
  "scheduled_deletion": null,
  "history_retention_period": 7,
  "dataclip_retention_period": null,
  "retention_policy": "retain_all",
  "collections": {},
  "workflows": {
    "[ARCHIVE]-Fetch-Historical-Kobo-Grievance-Data": {
      "id": "8895a2e8-a234-46c8-8407-57c517e44eee",
      "name": "[ARCHIVE] Fetch Historical Kobo Grievance Data",
      "inserted_at": "2025-07-01T08:08:01.727396Z",
      "lock_version": 3,
      "triggers": {
        "cron": {
          "enabled": false,
          "id": "4994df72-c313-460a-bef0-f89a7c4f7f60",
          "type": "cron",
          "cron_expression": "0 */1 * * *"
        }
      },
      "jobs": {
        "ARCHIVE-Fetch-Historical-Kobo-Grievance-Data": {
          "id": "5f5818a2-199a-4acb-a4ac-9b1b058a06ab",
          "name": "ARCHIVE Fetch Historical Kobo Grievance Data",
          "body": "fn(state => { //test comment\n  // OpenFn will not sync Kobo records that are older than 1 week to avoid overwriting data in Asana\n  const isMoreThanAWeekOld = dateString => {\n    const currentDate = new Date();\n    const inputDate = new Date(dateString);\n    // Calculate the difference in time (in milliseconds) and convert to days\n    const daysDifference = (currentDate - inputDate) / (1000 * 60 * 60 * 24);\n\n    return daysDifference > 7;\n  };\n  // IF YOU CLEAR STATE...\n  // Set this manual cursor to the earliest submission date you want fetch.\n\n  const manualCursor = '2024-07-16T06:01:18.729Z';\n\n  state.cursor = state.lastEnd || manualCursor;\n\n  if (!state.cursor)\n    throw new Error(\n      'Please define a cursor date no greater than 1 week ago and try again'\n    );\n  if (isMoreThanAWeekOld(state.cursor))\n    throw new Error(\n      `cursor ${state.cursor} is older than 1 week. OpenFn will not sync Kobo records that are older than 1 week to avoid overwriting data in Asana.`\n    );\n\n  console.log('Current cursor value:', state.cursor);\n\n  state.data = {\n    surveys: [\n    //==== GRIEVANCES FORM : Add new GRM forms below  ===============//\n    // The GRM IDs are the one from the GRM tracking sheet: https://docs.google.com/spreadsheets/d/1Th_fMU0wlw70OL3gzuUwWNu1LXNt1smq/edit#gid=1881042567 //\n \n  { // GRM ID. 18 - All projects in that country - CAR\n      uid: 'aPpWSiN5k9MufmqQzAaaRY',\n      formName: 'GRM CAR',\n      projectid: '1208390966993328' // GRM CAR\n  },\n     \n  { // GRM ID. 17 - Yankari Game Reserve - Nigeria\n      uid: 'awRoJB7vafgNXneSuNZ93g',\n      formName: 'YGR GRM', \n      projectid: '1208202492914969' // GRM_YGR \n  },\n\n  { // GRM ID. 16 - Afi (Cross River) - Nigeria\n      uid: 'a4rZX9WRjNGj9YFyr4iHMV',\n      formName: 'Afi GRM', \n      projectid: '1208202492914972' // GRM_Afi \n  },\n    \n  { // GRM ID. 15 - All projects in that country - Belize\n      uid: 'aiM2aRxRECUaPTvKDA8bmJ',\n      formName: 'Belize Grievance Form', \n      formOwner: 'grm_belize',\n      projectid: '1208261458085162' // GRM Belize \n  },\n   \n    { // GRM ID. 14 - Argentina (country wide)\n      uid: 'aAUX6MxCFmAxvcmqdwyFxV',\n      formName: 'Mecanismo de atención de Quejas, Reclamos y Sugerencias', \n      projectid: '1207852376378365' // GRM Argentina\n    },\n    \n    { // GRM ID. 13 - Mbe Mountains - Nigeria\n      uid: 'aCQPTgBE8jgb4mKbvkLqJj',\n      formName: 'Mbe Mountains GRM', \n      projectid: '1204985880563960' // GRM_Mbe\n    },\n       \n    { // GRM ID. 12 - Mamabay - Madagascar\n      uid: 'aBoTAXpkcvgB7VnuGkjdrg',\n      formName: 'Mamabay Grievance Intake Form', \n      projectid: '1205812185361950' // GRM Mamabay\n    },\n   \n    { // GRM ID. 11 - Keo Seima - Cambodia\n      uid: 'aKXjStgj9doSpyMhsVwkE7',\n      formName: 'Keo Seima GRM', \n      projectid: '1205638979644635' // Keo Seima GRM\n    },\n     \n    { // GRM ID. 10 - Ndoki - Congo\n      uid: 'aBWBZDn32h7y4UY8FABb6t',\n      formName: 'NNNP_Feedback_Form',\n      projectid: '1204985880563965' // GRM Ndoki\n    },\n       \n    { // GRM ID. 9 - Mbam-Djerem - Cameroon\n      uid: 'aGcXidoMfazBrksRV7LSkk',\n      formName: 'GRM PNMD 2023', \n      projectid: '1204909106761526' // GRM Mbam Djerem\n    },\n    \n    { // GRM ID. 8 - Niassa - Mozambique\n      uid: 'aHYNoZsRMpJZnWeotomtce',\n      formName: 'Formulário de ocorrências da Reserva Especial do Niassa', \n      projectid: '1204346679777510' // GRM Niassa\n    },\n     \n    { // GRM ID. 7 - Ruaha Katavi - Tanzania\n      uid: 'aeMMvn4Pi4m8M7FakifgK8',\n      formName: 'GRM WCS Ruaha Katavi Kobo Form', \n      projectid: '1204127406220940' // GRM Ruaha Katavi\n    },\n     \n    { // GRM ID. 6 - Kahuzi Biega - DRC\n      uid: 'aDao3y4jjzJJuSGxvXVgAJ',\n      formName: 'KBNP Feedback Form',\n      projectid: '1203957987731383' // GRM_KBNP\n     },\n    \n    { // GRM ID. 5 - Blue Future - Mozambique\n      uid: 'aEcSCYhXLfehtVDumdaRRh',\n      formName: 'Formulário de Sugestões e Reclamações Públicas', \n      projectid: '1203703258740979' // Blue Future Grievances & Suggestions\n    },\n    \n    // Form archived - AAO only using the External one\n    //{ // GRM ID. 4b AAO Internal - Peru, Colombia, Ecuador, Brazil\n    //  uid: 'aGDHHz7hMZVwAbAjwnFSth',\n    //  formName: 'AAO Interno Grievance_Form_20220831', \n    //  projectid: '1203829521790035' // AAO Internal PQR\n    //},\n     \n    { // GRM ID. 4a - AAO External - Peru, Colombia, Ecuador, Brazil\n      uid: 'a6FdhcebAqFZpdRej4f5FP',\n      formName: 'Mecanismo de Atención de Peticiones, Quejas y Reclamos', \n      projectid: '1203150475209897' // AAO External PQR\n    },\n    \n    { // GRM ID. 3 - Okapi - DRC\n      uid: 'akknuhDAMSW88M6eBYkr6Y',\n      formName: 'OWR feedback form', \n      projectid: '1202329899911590' // GRM_OWR\n    },\n \n    { // GRM ID. 2 - All - Indonesia\n      uid: 'a2SXkrerDvs2ZnwjaVKTYg',\n      formName: 'Aceh Grievance Form - TEST', \n      projectid: '1201871867457230' // Aceh GRM - TEST FOR OpenFn\n    },\n\n    { // GRM ID. 1 - Global\n      uid: 'aEQjRDMcEgLzRDQYcFqSCC',\n      formName: 'WCS Global Grievances & Suggestions', \n      projectid: '1201382240883590' //\n    },\n\n     //==== OTHER FORMS ===============//\n    // {\n    //   uid: 'kobo-id',\n    //   formName: 'Form Name', //Kobo form name\n    //   projectid: 'asana-id-from-url' //Asana project ID\n    // },\n    //================================//\n\n    ].map(survey => ({\n      ...survey,\n      formId: survey.uid,\n      url: `https://kf.kobotoolbox.org/api/v2/assets/${survey.uid}/data/?format=json`,\n      query: `&query={\"_submission_time\":{\"$gte\":\"${state.cursor}\"}}`,\n    })),\n  };\n\n  state.emptySubmissions = {};\n  return state;\n});\n\neach(dataPath('surveys[*]'), state => {\n  const { url, query, tag, formId, formType, formName, owner, projectid } =\n    state.data;\n  return get(`${url}${query}`, {}, state => {\n    state.data.submissions = state.data.results.map(submission => {\n      //console.log('Submissions ');\n      return {\n        // Here we append the tags defined above to the Kobo form submission data\n        projectid,\n        formName,\n        formOwner: owner,\n        formType,\n        body: submission,\n      };\n    });\n    const count = state.data.submissions.length;\n\n    console.log(`Fetched ${count} submissions from ${formName}.`);\n    //Once we fetch the data, we want to post each individual Kobo survey\n    //back to the OpenFn inbox to run through the jobs =========================\n    return each(dataPath('submissions[*]'), state => {\n      console.log(`Posting 1 of ${count}...`);\n      console.log(`Submission with uuid ${state.data.body._id}`);\n      if (!state.data) {\n        if (!state.emptySubmissions[formId]) {\n          state.emptySubmissions[formId] = [state.data];\n        }\n        state.emptySubmissions[formId].push(state.data);\n      }\n      return post(state.configuration.openfnInboxUrl, {\n        body: state => state.data,\n      })(state);\n    })(state);\n    // =========================================================================\n  })(state);\n});\n\nfn(state => {\n  let lastEnd = state.references\n    .filter(item => item.body)\n    .map(s => s.body.start)\n    .sort((a, b) => new Date(b.date) - new Date(a.date))[0];\n\n  lastEnd = new Date(lastEnd) > new Date() ? lastEnd : new Date().toISOString();\n\n  console.log('New cursor value:', lastEnd);\n  return { ...state, data: {}, references: [], lastEnd };\n});\n\n// Throw an error for empty submissions\nfn(state => {\n  const forms = Object.keys(state.emptySubmissions);\n  const formSubmission = id => state.emptySubmissions[id];\n\n  if (!forms.length > 0) return state;\n\n  forms.forEach(id => {\n    console.warn(\n      `OpenFn sent ${\n        formSubmission(id).length\n      } empty message to the inbox for ${id}`\n    );\n  });\n\n  throw new Error(\n    'Please troubleshoot why this happened. No data will be sent to Asana for these records.'\n  );\n});\n",
          "adaptor": "@openfn/language-http@v3.1.12",
          "project_credential_id": null
        }
      },
      "edges": {
        "cron->ARCHIVE-Fetch-Historical-Kobo-Grievance-Data": {
          "enabled": true,
          "id": "03c9e659-0a93-486d-8c26-5322174a6d8f",
          "target_job_id": "5f5818a2-199a-4acb-a4ac-9b1b058a06ab",
          "source_trigger_id": "4994df72-c313-460a-bef0-f89a7c4f7f60",
          "condition_type": "always"
        }
      }
    },
    "KM-Get-GRM-FormsList": {
      "id": "05dee792-addf-4f97-9590-1ea2e32dc8b5",
      "name": "KM Get GRM FormsList",
      "inserted_at": "2025-07-02T13:51:12.875521Z",
      "lock_version": 4,
      "triggers": {
        "cron": {
          "enabled": false,
          "id": "efe10228-d1dd-4b4c-9eb0-626c8c05a847",
          "type": "cron",
          "cron_expression": "0 */3 * * *"
        }
      },
      "jobs": {
        "KoboData-1-Get-GRM-FormsList": {
          "id": "111f81f3-e27b-4c00-9f8a-a0700c112a39",
          "name": "KoboData-1 Get GRM FormsList",
          "body": "//== Job to be used for getting a list of \"deployed\" Kobo forms from sheets to auto-sync  ==//\n// This can be run on-demand at any time by clicking \"run\" or modify manualCursor below //\ngetValues(\n  '1s7K3kxzm5AlpwiALattyc7D9_aIyqWmo2ubcQIUlqlY',\n  'grm-DEPLOYED!A:AA', //get Deployed forms list from Sheet\n  \n  state => {\n    const [headers, ...values] = state.data.values;\n\n    const mapHeaderToValue = value => {\n      return headers.reduce((obj, header) => {\n        obj[header] = value[headers.indexOf(header)];\n        return obj;\n      }, {});\n    };\n\n    state.sheetsData = values\n      .filter(\n        item =>\n          item.includes('TRUE') //return forms where auto-sync = TRUE\n          \n      )\n      .map(item => mapHeaderToValue(item));\n\n    return state;\n  }\n);\n\nfn(state => {\n  const { sheetsData } = state;\n\n  // Set a manual cursor if you'd like to only fetch data after this date...\n  //e.g., '2023-01-01T23:51:45.491+01:00'\n  const manualCursor = '';  //lastUsed: 2024-04-01T00:00:00.000Z\n  console.log('manualCursor defined?', manualCursor);\n  \n  //...otherwise the job will use this dynamicCursor\n  const dynamicCursor = getTodayISODate(); \n\n  function getTodayISODate() {\n    const today = new Date();\n    today.setUTCHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to 0\n    return today.toISOString(); // Convert to ISO string\n  }\n  \n  const cursorValue = manualCursor || dynamicCursor; \n  console.log('Cursor value to use in query:', cursorValue);\n  \n   \n\n  const formsList = sheetsData.map(survey => ({\n      formId: survey.uid,\n      owner: survey.owner,\n      name: survey.name \n  })); \n  \n  console.log('# of deployed forms detected in Sheet:: ', formsList.length);\n  console.log('List of forms to auto-sync:: ', JSON.stringify(formsList, null, 2)); \n\n  state.data = {\n    surveys: sheetsData.map(survey => ({\n      formId: survey.uid,\n      //tag: survey.tag,\n      name: survey.name,\n      owner: survey.owner,\n      projectId: survey.asana_projectid,\n      url1: `https://kf.kobotoolbox.org/api/v2/assets/${survey.uid}/counts`,\n      url2: `https://kf.kobotoolbox.org/api/v2/assets/${survey.uid}/data`\n      // query: `&query={\"end\":{\"$gte\":\"${cursorValue}\"}}`,\n    })),\n  };\n  console.log(state.data);\n  return state;\n});\n",
          "adaptor": "@openfn/language-googlesheets@v2.3.0",
          "project_credential_id": null
        },
        "KoboData-2-GetSubmissionMetadata": {
          "id": "c2488e94-83f4-487f-94a3-5f197e3360f1",
          "name": "KoboData-2 GetSubmissionMetadata",
          "body": "// Initialize an empty array to accumulate survey data\nfn(state => ({ ...state, surveysList: [] })),\n\n// Process each survey\neach(dataPath('surveys[*]'), state => {\n  const { url1, url2, formId, name, owner, projectId } = state.data;\n\n  return fn(async state => {\n    const response1 = await get(`${url1}`, {})(state);\n    const response2 = await get(`${url2}`, {})(state);\n\n    const resultList = response2.data.results;\n    // const lastSubmissionTime = resultList[resultList.length - 1]._submission_time;\n    let lastSubmissionTime;\n    if (resultList.length > 0) {\n      lastSubmissionTime = resultList[resultList.length - 1]._submission_time;\n    } else {\n      lastSubmissionTime = null;\n    }\n    \n    let total_submission_count;\n    if (response1.data && 'total_submission_count' in response1.data) {\n      total_submission_count = response1.data.total_submission_count;\n    } else {\n      total_submission_count = undefined;\n    }\n    \n    console.log(`Processing: ${formId}`);\n    console.log(url1);\n    console.log(url2);\n    console.log(`Last submission time: ${lastSubmissionTime}`);\n\n    const surveyData = {\n      formId,\n      name,\n      // total_submission_count: response1.data.total_submission_count,\n      owner,\n      total_submission_count,\n      lastSubmissionTime,\n      projectId\n    };\n\n    // Add the current survey data to the accumulator\n    return { \n      ...state, \n      surveysList: [...state.surveysList, surveyData]\n    };\n  })(state);\n}),\n\n// After processing all surveys, update the state with the accumulated data\nfn(state => {\n  const finalState = {\n    ...state,\n    data: {\n      ...state.data,\n      surveys: state.surveysList\n    }\n  };\n  console.log(\"Final combined state:\", JSON.stringify(finalState.data, null, 2));\n  return finalState;\n})\n",
          "adaptor": "@openfn/language-http@3.1.11",
          "project_credential_id": "f4713092-5fff-4910-b4ff-d3a4f942ad9f"
        },
        "KoboData-3-Upsert-to-DB": {
          "id": "ba4d016f-fff8-4eb8-91c4-c076cb5f3f99",
          "name": "KoboData-3 Upsert to DB",
          "body": "fn((state) => {\n \n  const surveys = state.data.surveys.map((survey) => ({\n    DatasetName: survey.name,\n    DatasetOwner: survey.owner,\n    DatasetUuidID: survey.formId,\n    LastSubmissionTime: survey.lastSubmissionTime,\n    KoboSubmissionCount: survey.total_submission_count,\n    LastCheckedTime: new Date().toISOString(),\n    LastUpdateTime: new Date().toISOString(),\n    KoboManaged: true,\n    Citation: survey.projectId\n  }));\n\n  console.log(\"Surveys to be upserted: \", surveys);\n \n  return { ...state, surveys };\n});\n\n\n\nupsertMany(\"WCSPROGRAMS_KoboData\", \"DatasetUuidID\", (state) => state.surveys, {\n  logQuery: true,\n});\n",
          "adaptor": "@openfn/language-mssql@2.6.11",
          "project_credential_id": "d1550910-dee4-48b0-96f7-351081913e5f"
        }
      },
      "edges": {
        "cron->KoboData-1-Get-GRM-FormsList": {
          "enabled": true,
          "id": "d3ab3427-33c7-4df2-a0d9-2e6363acd6e9",
          "target_job_id": "111f81f3-e27b-4c00-9f8a-a0700c112a39",
          "source_trigger_id": "efe10228-d1dd-4b4c-9eb0-626c8c05a847",
          "condition_type": "always"
        },
        "KoboData-1-Get-GRM-FormsList->KoboData-2-GetSubmissionMetadata": {
          "enabled": true,
          "id": "6020c62f-887a-4862-9815-0e996a237fae",
          "target_job_id": "c2488e94-83f4-487f-94a3-5f197e3360f1",
          "source_job_id": "111f81f3-e27b-4c00-9f8a-a0700c112a39",
          "condition_type": "on_job_success"
        },
        "KoboData-2-GetSubmissionMetadata->KoboData-3-Upsert-to-DB": {
          "enabled": true,
          "id": "ccffe3e8-930f-4801-949a-b43cc8d43eb3",
          "target_job_id": "ba4d016f-fff8-4eb8-91c4-c076cb5f3f99",
          "source_job_id": "c2488e94-83f4-487f-94a3-5f197e3360f1",
          "condition_type": "on_job_success"
        }
      }
    },
    "0.-GIDs-and-Mappings-for-Upsert": {
      "id": "46f442b7-49b6-4f68-8ff1-436fcb2fb211",
      "name": "0. GIDs and Mappings for Upsert",
      "inserted_at": "2025-07-02T13:53:14.875188Z",
      "lock_version": 5,
      "triggers": {
        "cron": {
          "enabled": false,
          "id": "d084bb98-e1d0-46c7-a9e8-80fdbaea6b1d",
          "type": "cron",
          "cron_expression": "0 2 * * *"
        }
      },
      "jobs": {
        "A-GIDs-and-Mappings-for-Upsert": {
          "id": "627e7d10-1ce0-4b02-9c04-8af30a1e158e",
          "name": "A GIDs and Mappings for Upsert",
          "body": "//Typically run at the very beginning, or when we add new fields in Asana.\n// Retrieve the Project gid and task gid from the Asana project URL i.e. https://app.asana.com/0/<Project_gid/task_id\n// get(\"/tasks/1201871867457231\", {\n//     headers: {\n//       Accept: \"application/json\",\n//       Authorization: `Bearer ${state.configuration.token}`      \n//       },\n  \n//   },\n  \n    //Returns a json of all fields and their associated gids. There are gids for project, task, field and field options/choices.\n    //this can be viewed in the Activity History\n    \n    //Note: Customizing a field name in Asana does not change its gid.  \n  \n  \n  \n  \n   // =========== FETCHING GIDS FROM ASANA TO CREATE SOME HELPFSUL UPSERT STATEMENTS =============  \n//FOR THIS JOB WE NEED A task_gid and NOT project_id. \n// So you first create a sample task in your project, and retrieve its task_id and then insert it in 'getTask' below\n// Retrieve the task_gid from the Asana project URL i.e. https://app.asana.com/0/<Project_gid/task_id\n\n// Make sure that this task is alive in asana!\n  getTask(\"1209399303211159\",   //Again, this is a task_gid, and NOT a project_id\n  {},\n  state => {\n    return state;\n  },\n );\n \n // =========== MAPPLE TABLES & STATEMENTS FOR UPSERT JOB =============\n \n// *********** 1. MAPPING TABLES **************\n//This fn below creates a mapping table / code snippet for Asana custom fields choices (enum_option)\n//This should be at the very top of the script, before the upsert function.\nfn(state => {\n  const { data } = state.data;\n  const formatMapping = {};\n  \n  console.log(\"*********DATA***********\");\n  console.log(data);\n  \n  data.custom_fields.forEach(field => {\n    if (field.enum_options){\n      field.enum_options.forEach(option => {\n        formatMapping[field.name + \"_\" + option.name] = option.gid;\n      });\n    }\n  });\n   \n  console.log(\"//=======Mapping Table Statements ============\");\n  console.log(\"(Must be placed in fn block where you define const formatMapping, and return ...state, formatMapping)\");\n  console.log(formatMapping);\n  console.log('//=====================End of Mapping Table statements=============');\n  console.log('');\n  return state;\n});\n //These output Statements should be placed into this fn Block:\n \n// fn(state => {   \n//   const formatMapping = {\n//   Statement 1\n//   Statement 2\n//   Statement n\n//   };\n//   return { ...state, formatMapping };\n// });\n// ********************** END OF MAPPLE TABLES ****************************************************\n\n\n\n// ***************** 2. STATEMENTS FOR OPEN-ENDED AND MULTICHOICE QUESTIONS *************************************\n//This tells Asana what fields to update and how to locate them.\nfn(state => {\n  const { data } = state.data;\n  var script = \"\";\n  \n  console.log(\"//========Statements to insert into custom_fieds{} =======\");\n  console.log(\"\");\n  \n  console.log(\"// Fields  belonging to open-ended questions (qxns that accept free text input)\");\n  data.custom_fields.forEach(s => {\n    if(s.name && !s.enum_options){\n      // Fields  belonging to open-ended questions (qxns that accept free text input)\n      script = \"'\"+ s.gid + \"'\" + \": dataValue('body.\" + s.name+\"'),\";\n      console.log(script);\n    }\n  });\n\n\n  console.log(\"\");\n  console.log(\"// Fields  belonging to questions with dropdown or multiple choice\");\n  data.custom_fields.forEach(s => {\n    if(s.name && s.enum_options){\n      // Fields  belonging to questions with dropdown or multiple choice\n      script = `'${s.gid}': state => state.formatMapping[\"${s.name}_\" + dataValue('body.${s.name}')(state)],`;\n      console.log(script);\n    }\n\n  });\n\n\n  console.log('//===========End of Statements========================');\n  \n  return state;\n });\n \n// ***************** END OF STATEMENTS FOR OPEN-ENDED QUESTIONS ************************************* \n",
          "adaptor": "@openfn/language-asana@v2.0.0",
          "project_credential_id": null
        }
      },
      "edges": {
        "cron->A-GIDs-and-Mappings-for-Upsert": {
          "enabled": true,
          "id": "e652a60b-5e85-4ccc-8777-4163e0e9d4ff",
          "target_job_id": "627e7d10-1ce0-4b02-9c04-8af30a1e158e",
          "source_trigger_id": "d084bb98-e1d0-46c7-a9e8-80fdbaea6b1d",
          "condition_type": "always"
        }
      }
    },
    "1.-Get-FormsList-(Ongoing)": {
      "id": "466e0e86-d4de-4760-92fe-7ddf5e8060e0",
      "name": "1. Get FormsList (Ongoing)",
      "inserted_at": "2025-07-03T13:53:16.864530Z",
      "lock_version": 23,
      "triggers": {
        "cron": {
          "enabled": false,
          "id": "0b68dfb0-7482-4630-ae12-acb1bc257999",
          "type": "cron",
          "cron_expression": "0 */1 * * *"
        }
      },
      "jobs": {
        "GRM-Fetch-1-Get-FormsList-Ongoing": {
          "id": "021760c3-294b-40a3-b7e6-4419359e2d49",
          "name": "GRM-Fetch-1 Get FormsList Ongoing",
          "body": "//== Job to be used for getting a list of deployed GRM Kobo forms from sheets to auto-sync  ==//\n// Link to sheet: https://docs.google.com/spreadsheets/d/1s7K3kxzm5AlpwiALattyc7D9_aIyqWmo2ubcQIUlqlY/edit?gid=1559623602#gid=1559623602\n// This can be run on-demand at any time by clicking \"run\" //\ngetValues(\n  '1s7K3kxzm5AlpwiALattyc7D9_aIyqWmo2ubcQIUlqlY',\n  'grm-DEPLOYED!A:P', //get Deployed GRM forms list from Sheet\n  state => {\n    const [headers, ...values] = state.data.values;\n\n    const mapHeaderToValue = value => {\n      return headers.reduce((obj, header) => {\n        obj[header] = value[headers.indexOf(header)];\n        return obj;\n      }, {});\n    };\n\n    state.sheetsData = values\n      .filter(\n        item => item.includes('TRUE') //return forms where auto-sync = TRUE\n        //&& item.includes('bns_survey', 'nrgt_current')\n      )\n      .map(item => mapHeaderToValue(item));\n\n    return state;\n  }\n);\n\nfn(state => {\n  const { sheetsData } = state;\n\n  // OpenFn will not sync Kobo records that are older than 1 week to avoid overwriting data in Asana\n  const isMoreThanAWeekOld = dateString => {\n    const currentDate = new Date();\n    const inputDate = new Date(dateString);\n    // Calculate the difference in time (in milliseconds) and convert to days\n    const daysDifference = (currentDate - inputDate) / (1000 * 60 * 60 * 24);\n\n    return daysDifference > 7;\n  };\n  // IF YOU CLEAR STATE...\n  // Set this manual cursor to the earliest submission date you want fetch.\n  const manualCursor = '2025-02-06T22:00:07.922Z';\n\n  state.cursor = state.lastEnd || manualCursor;\n\n  if (!state.cursor)\n    throw new Error(\n      'Please define a cursor date no greater than 1 week ago and try again'\n    );\n  if (isMoreThanAWeekOld(state.cursor))\n    throw new Error(\n      `cursor ${state.cursor} is older than 1 week. OpenFn will not sync Kobo records that are older than 1 week to avoid overwriting data in Asana.`\n    );\n\n  console.log('Current cursor value:', state.cursor);\n\n  const formsList = sheetsData.map(survey => ({\n    formId: survey.uid,\n    tag: survey.tag,\n    name: survey.name,\n    projectid: survey.asana_projectid,\n  }));\n\n  console.log('# of GRM forms detected in Sheet:: ', formsList.length);\n  console.log(\n    'List of forms to re-sync:: ',\n    JSON.stringify(formsList, null, 2)\n  );\n\n  state.data = {\n    surveys: sheetsData.map(survey => ({\n      projectid: survey.asana_projectid ,\n      formId: survey.uid,\n      tag: survey.tag,\n      name: survey.name,\n      owner: survey.owner,\n      url: `https://kf.kobotoolbox.org/api/v2/assets/${survey.uid}/data/?format=json`,\n      query: `&query={\"_submission_time\":{\"$gte\":\"${state.cursor}\"}}`,\n    })),\n  };\n  \n  console.log('mapped sheetsData::', JSON.stringify(state.data, null,2)); \n  \n  return state;\n});\n\nfn(state => {\n  // let lastEnd = state.references\n  //   .filter(item => item.body)\n  //   .map(s => s.body.end)\n  //   .sort((a, b) => new Date(b.date) - new Date(a.date))[0];\n\n  let lastEnd = new Date().toISOString();\n\n  console.log('New cursor value:', lastEnd);\n  return { ...state, references: [], lastEnd };\n});\n",
          "adaptor": "@openfn/language-googlesheets@3.0.14",
          "project_credential_id": "85582b39-fc79-4e5e-9460-cdd276714ea6"
        },
        "GRM-Fetch-2-Get-Kobo-Forms-Ongoing": {
          "id": "32590563-b5f6-4474-8528-cdbea6891a42",
          "name": "GRM-Fetch-2 Get Kobo Forms Ongoing",
          "body": "// Here we fetch submissions for all deployed \"GRM\" forms in GoogleSheet\n// NOTE: See linked job \"[GRM-A] 1.Get FormsList (Ongoing)\" for cursor & GoogleSheet query logic\n//**********************************************************//\nfn(state => {\n  state.errors = [];\n  state.globalIndex = 0;\n  state.regionKeyMap = {\n    'East Africa Western Indian Ocean & Madagascar': 'eaw_workflowUrl',\n    'Global': 'glo_workflowUrl',\n    'Andes, Amazon & Orinoco': 'aao_workflowUrl',\n    'Central Africa & Gulf of Guinea': 'cag_workflowUrl',\n    'Mesoamerica & Western Caribbean': 'mwc_workflowUrl',\n    'Patagonia': 'pat_workflowUrl',\n    'South Asia and Bay of Bengal': 'sab_workflowUrl',\n    'Sudano-Sahel': 'sus_workflowUrl'\n  };\n  return state;\n});\n\neach(dataPath('surveys[*]'), state => {\n  const { url, query, tag, formId, formType, name, owner, projectid } =\n    state.data;\n  console.log('Sending GET to ::', `${url}${query}`); \n  return get(`${url}${query}`, {}, state => {\n    state.data.submissions = state.data.results.map((submission, i) => {\n      return {\n        i,\n        // Here we append the tags defined above to the Kobo form submission data\n        formId,\n        projectid,\n        formName: name,\n        formOwner: owner,\n        formType,\n        body: submission,\n      };\n    });\n    const count = state.data.submissions.length;\n    console.log(`Fetched ${count} submissions from ${formId} (${name}).`);\n    //Once we fetch the data, we want to post each individual Kobo survey\n    //back to the OpenFn inbox to run through the jobs =========================\n    return each(dataPath('submissions[*]'), state => {\n      const formMeta = state.sheetsData.find(row => row.uid === formId);\n      if (!formMeta) throw new Error(`No metadata for formId ${formId}`);\n\n      const regionKey = state.regionKeyMap[formMeta.Region];\n      const workflowUrl = state.configuration[regionKey];\n\n      if (!workflowUrl) {\n        throw new Error(`No workflow URL configured for region: \"${formMeta.Region}\"`);\n      }\n      console.log(`Posting ${state.data.i + 1} of ${count}...`);\n      console.log(`Submission id:: ${state.data.body._id}`);\n\n      console.log(\"workflowUrl \" + formMeta.Region, \": \", workflowUrl); //TODO remove\n      return post(workflowUrl, {\n        body: state => state.data,\n      })(state);\n    })(state);\n  })(state).catch(err => {\n     const errors = state.errors || []; \n     errors.push({\n        formId,\n        message: err.message,\n      });\n      state.errors = errors;\n      console.log(`Error fetching submissions from  ${formId}::`, err.message);\n      return state;\n    });\n});\n\n//Throw errors at the end of the job if we failed to extract any Kobo forms\nfn(state => {\n  if (!state.errors) return state;\n \n  if (state.errors ? state.errors.length > 0 : false){\n    console.log('ERROR: Failed Kobo extracts :: ', JSON.stringify(state.errors, null,2)); \n    throw new Error(\n      `ERROR: ${state.errors.length} Kobo form extracts failed - please check permissions & ids! See above logs for formIds.`\n    );\n  }  \n  return state; \n});\n",
          "adaptor": "@openfn/language-http@3.1.11",
          "project_credential_id": "9516f11a-8ebe-46a0-b864-422bef6b02ed"
        }
      },
      "edges": {
        "cron->GRM-Fetch-1-Get-FormsList-Ongoing": {
          "enabled": true,
          "id": "c97eea3c-5d7a-4e6e-9899-f594859f0026",
          "target_job_id": "021760c3-294b-40a3-b7e6-4419359e2d49",
          "source_trigger_id": "0b68dfb0-7482-4630-ae12-acb1bc257999",
          "condition_type": "always"
        },
        "GRM-Fetch-1-Get-FormsList-Ongoing->GRM-Fetch-2-Get-Kobo-Forms-Ongoing": {
          "enabled": true,
          "id": "4431f650-2b66-4c7c-ba27-c67742b8f48a",
          "target_job_id": "32590563-b5f6-4474-8528-cdbea6891a42",
          "source_job_id": "021760c3-294b-40a3-b7e6-4419359e2d49",
          "condition_type": "on_job_success"
        }
      }
    },
    "AAO-Sync-Forms-to-Asana": {
      "id": "10bdc608-ec9d-4e72-980c-016f8c8f44b2",
      "name": "AAO Sync Forms to Asana",
      "inserted_at": "2025-07-03T13:53:32.911115Z",
      "lock_version": 9,
      "triggers": {
        "webhook": {
          "enabled": false,
          "id": "f5e25130-0492-4165-92c9-29865c770b15",
          "type": "webhook"
        }
      },
      "jobs": {
        "Triage-jobs": {
          "id": "b4f87c46-aac3-4347-bd9e-9ed5d84c22db",
          "name": "Triage jobs",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n     Country_Bolivia: '1203150662724252',\n  Country_Brazil: '1203150662724253',\n  Country_Colombia: '1203150662724254',\n  Country_Ecuador: '1203150662724255',\n  Country_Peru: '1203150662724256',\n  Country_Indeterminado: '1203150662724257',\n  Donor_AFD: '1207470695842883',\n  Donor_BAF: '1207470914898964',\n  Donor_BEF: '1207470928895774',\n  Donor_EU: '1207470928895775',\n  Donor_GEF: '1207470928895776',\n  Donor_INL: '1207470928895777',\n  Donor_LLF: '1207470928895778',\n  Donor_NOAA: '1207470928895779',\n  Donor_MACP: '1207470928895780',\n  'Donor_REDD+': '1207470928895781',\n  Donor_USAID: '1207470928895782',\n  'Donor_World Bank': '1207551210258645',\n  WcsStaff_Yes: '1207934086722710',\n  WcsStaff_No: '1207934086722711',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  Anonymous_Anonymous: '1203977086782816',\n  Gender_Male: '1202330737362427',\n  Gender_Female: '1202330737362428',\n  'Gender_Mixed gender (group)': '1202330737362429',\n  'Gender_Unknown gender': '1202330737362430',\n  'Gender_Other gender': '1207852335266397',\n  'Gender_Prefer not to report': '1207852335266398',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  IndigenousPeople_mixed_group: '1207724962870243',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  GrievanceType_RelatedProjects: '1187634487549316',\n  GrievanceType_LandTerritory: '1187634487549317',\n  GrievanceType_WildlifeConflict: '1187634487549318',\n  GrievanceType_OtherIssues: '1201884389902967',\n  GrievanceType_Suggestion: '1201884389905045',\n  GrievanceReportFormat_InPerson: '1192836094355011',\n  GrievanceReportFormat_PhoneCall: '1192836094355012',\n  GrievanceReportFormat_TextMessage: '1192847692374160',\n  GrievanceReportFormat_SuggestionBox: '1207122874564877',\n  GrievanceReportFormat_Email: '1192847692376214',\n  GrievanceReportFormat_PostalLetter: '1192847692376223',\n  GrievanceReportFormat_DirectSubmission: '1207001942658468',\n  GrievanceReportFormat_OnlineGlobalGRMForm: '1205980239099429'\n};\n\n  return { ...state, formatMapping };\n});\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.GrievanceID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptioGrievance'),\n      custom_fields: {\n                // Fields  belonging to open-ended questions (qxns that accept free text input)\n'1203711959959076': dataValue('body.StaffName'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1203150636879068': dataValue('body.DateGrievanceReceived'), // this is Submission Date in Asana\n'1203712064304976': dataValue('body.ReporterFullName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1201884379104074': dataValue('body.GrievanceID'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1203984479412129': dataValue('body.WhenGrievance'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203829521790026': dataValue('body.DescriptioGrievance'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1203150636874723': dataValue('body.OneDriveFolder'),\n'1203830309880883': dataValue('body.WhatProject'),\n'1203829521790031': dataValue('body.Suggestion'),\n\n// Fields  belonging to questions with dropdown or multiple choice\n'1187328718760774': state => state.formatMapping[\"GrievanceStatus _\" + dataValue('body.GrievanceStatus ')(state)],\n'1203150662724247': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202593715272940': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n'1204269608862901': state => state.formatMapping[\"Classification_\" + dataValue('body.Classification')(state)],\n'1203150662724251': state => state.formatMapping[\"Country_\" + dataValue('body.Country')(state)],\n'1207470695842882': state => state.formatMapping[\"Donor_\" + dataValue('body.WhatDonor')(state)],\n'1207934086722709': state => state.formatMapping[\"WcsStaff_\" + dataValue('body.WcsStaff')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1203977086782815': state => state.formatMapping[\"Anonymous_\" + dataValue('body.Anonymous')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n'1187634487549315': state => state.formatMapping[\"GrievanceType_\" + dataValue('body.GrievanceType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n }\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-common@2.5.0",
          "project_credential_id": null
        },
        "GRM04b-Upsert-AAO-Int-Grievances": {
          "id": "687ceccc-0ec5-44d8-875e-237c1564828d",
          "name": "GRM04b Upsert AAO Int Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  GrievanceOrSuggestion_Grievance: '1203830364115982',\n  GrievanceOrSuggestion_Suggestion: '1203830364115983',\n  Country_Bolivia: '1203830401179864',\n  Country_Brazil: '1203830401179865',\n  Country_Colombia: '1203830401179866',\n  Country_Ecuador: '1203830401179867',\n  Country_Peru: '1203830401179868',\n  Country_Indeterminado: '1203830401179869',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_PostalLetter: '1202330347503544',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  'GrievanceStatus _BeingReviewed': '1192850232576003',\n  'GrievanceStatus _NotAssigned': '1187328718760775',\n  'GrievanceStatus _Dismissed': '1187674280676653',\n  'GrievanceStatus _OnHold': '1187328718760778',\n  'GrievanceStatus _BeingInvestigated': '1187328718760776',\n  'GrievanceStatus _Resolved': '1187328718760777',\n  'GrievanceStatus _RemediationBeingMonitored': '1192772373678248',\n  GrievanceType_RelatedProjects: '1187634487549316',\n  GrievanceType_LandTerritory: '1187634487549317',\n  GrievanceType_WildlifeConflict: '1187634487549318',\n  GrievanceType_OtherIssues: '1201884389902967',\n  GrievanceType_Suggestion: '1201884389905045',\n  GrievanceReportFormat_InPerson: '1192836094355011',\n  GrievanceReportFormat_VoiceCall: '1192836094355012',\n  GrievanceReportFormat_TextMessage: '1192847692374160',\n  GrievanceReportFormat_Email: '1192847692376214',\n  GrievanceReportFormat_PostalLetter: '1192847692376223',\n  'Confidentiality or Sensitivity_Yes': '1203830401198952',\n  'Confidentiality or Sensitivity_No': '1203830401198953'\n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.ReporterFullName')(state)}_${dataValue('body.WhenGrievance')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptioGrievance'),\n      custom_fields: {\n        // Fields  belonging to open-ended questions (qxns that accept free text input)\n'1203711959959076': dataValue('body.StaffName'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1203830401198936': dataValue('body.DateGrievanceEntered'),\n'1203712064304976': dataValue('body.ReporterFullName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1203830309880883': dataValue('body.WhatProject'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1203984485905764': dataValue('body.WhenGrievance'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n//'1203830401179888': dataValue('body.DescriptioGrievance'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1203830401198931': dataValue('body.Suggestion'),\n'1201884379104074': dataValue('body.GrievanceID'),\n\n// Fields  belonging to questions with dropdown or multiple choice\n'1203830364115981': state => state.formatMapping[\"GrievanceOrSuggestion_\" + dataValue('body.GrievanceOrSuggestion')(state)],\n'1203830401179863': state => state.formatMapping[\"Country_\" + dataValue('body.Country')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n'1187328718760774': state => state.formatMapping[\"GrievanceStatus _\" + dataValue('body.GrievanceStatus ')(state)],\n'1187634487549315': state => state.formatMapping[\"GrievanceType_\" + dataValue('body.GrievanceType')(state)],\n'1192836094355010': state => state.formatMapping[\"GrievanceReportFormat_\" + dataValue('body.GrievanceReportFormat')(state)],\n'1203830401198951': state => state.formatMapping[\"Confidentiality or Sensitivity_\" + dataValue('body.Confidentiality or Sensitivity')(state)],\n         },\n      },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM04-Upsert-AAO-Ext-Grievances": {
          "id": "49e2e6ce-dccc-4887-8aae-4d10cc70116a",
          "name": "GRM04 Upsert AAO Ext Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n     Country_Bolivia: '1203150662724252',\n  Country_Brazil: '1203150662724253',\n  Country_Colombia: '1203150662724254',\n  Country_Ecuador: '1203150662724255',\n  Country_Peru: '1203150662724256',\n  Country_Indeterminado: '1203150662724257',\n  Donor_AFD: '1207470695842883',\n  Donor_BAF: '1207470914898964',\n  Donor_BEF: '1207470928895774',\n  Donor_EU: '1207470928895775',\n  Donor_GEF: '1207470928895776',\n  Donor_INL: '1207470928895777',\n  Donor_LLF: '1207470928895778',\n  Donor_NOAA: '1207470928895779',\n  Donor_MACP: '1207470928895780',\n  'Donor_REDD+': '1207470928895781',\n  Donor_USAID: '1207470928895782',\n  'Donor_World Bank': '1207551210258645',\n  WcsStaff_Yes: '1207934086722710',\n  WcsStaff_No: '1207934086722711',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  Anonymous_Anonymous: '1203977086782816',\n  Gender_Male: '1202330737362427',\n  Gender_Female: '1202330737362428',\n  'Gender_Mixed gender (group)': '1202330737362429',\n  'Gender_Unknown gender': '1202330737362430',\n  'Gender_Other gender': '1207852335266397',\n  'Gender_Prefer not to report': '1207852335266398',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  IndigenousPeople_mixed_group: '1207724962870243',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  GrievanceType_RelatedProjects: '1187634487549316',\n  GrievanceType_LandTerritory: '1187634487549317',\n  GrievanceType_WildlifeConflict: '1187634487549318',\n  GrievanceType_OtherIssues: '1201884389902967',\n  GrievanceType_Suggestion: '1201884389905045',\n  GrievanceReportFormat_InPerson: '1192836094355011',\n  GrievanceReportFormat_PhoneCall: '1192836094355012',\n  GrievanceReportFormat_TextMessage: '1192847692374160',\n  GrievanceReportFormat_SuggestionBox: '1207122874564877',\n  GrievanceReportFormat_Email: '1192847692376214',\n  GrievanceReportFormat_PostalLetter: '1192847692376223',\n  GrievanceReportFormat_DirectSubmission: '1207001942658468',\n  GrievanceReportFormat_OnlineGlobalGRMForm: '1205980239099429'\n};\n\n  return { ...state, formatMapping };\n});\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.GrievanceID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptioGrievance'),\n      custom_fields: {\n                // Fields  belonging to open-ended questions (qxns that accept free text input)\n'1203711959959076': dataValue('body.StaffName'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1203150636879068': dataValue('body.DateGrievanceReceived'), // this is Submission Date in Asana\n'1203712064304976': dataValue('body.ReporterFullName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1201884379104074': dataValue('body.GrievanceID'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1203984479412129': dataValue('body.WhenGrievance'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203829521790026': dataValue('body.DescriptioGrievance'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1203150636874723': dataValue('body.OneDriveFolder'),\n'1203830309880883': dataValue('body.WhatProject'),\n'1203829521790031': dataValue('body.Suggestion'),\n\n// Fields  belonging to questions with dropdown or multiple choice\n'1187328718760774': state => state.formatMapping[\"GrievanceStatus _\" + dataValue('body.GrievanceStatus ')(state)],\n'1203150662724247': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202593715272940': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n'1204269608862901': state => state.formatMapping[\"Classification_\" + dataValue('body.Classification')(state)],\n'1203150662724251': state => state.formatMapping[\"Country_\" + dataValue('body.Country')(state)],\n'1207470695842882': state => state.formatMapping[\"Donor_\" + dataValue('body.WhatDonor')(state)],\n'1207934086722709': state => state.formatMapping[\"WcsStaff_\" + dataValue('body.WcsStaff')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1203977086782815': state => state.formatMapping[\"Anonymous_\" + dataValue('body.Anonymous')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n'1187634487549315': state => state.formatMapping[\"GrievanceType_\" + dataValue('body.GrievanceType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n }\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        }
      },
      "edges": {
        "webhook->Triage-jobs": {
          "enabled": true,
          "id": "a703db8c-8a46-4fa2-ba07-2352f169e5c0",
          "target_job_id": "b4f87c46-aac3-4347-bd9e-9ed5d84c22db",
          "source_trigger_id": "f5e25130-0492-4165-92c9-29865c770b15",
          "condition_type": "always",
          "condition_expression": "state.data.formName == \"Mecanismo de Atención de Peticiones, Quejas y Reclamos\""
        },
        "Triage-jobs->GRM04b-Upsert-AAO-Int-Grievances": {
          "enabled": true,
          "id": "d6c4d9ba-95c4-4be6-8a58-7891e05544a7",
          "target_job_id": "687ceccc-0ec5-44d8-875e-237c1564828d",
          "source_job_id": "b4f87c46-aac3-4347-bd9e-9ed5d84c22db",
          "condition_type": "js_expression",
          "condition_label": "Old AAO Int form",
          "condition_expression": "state.data.formName == \"AAO Interno Grievance_Form_20220831\""
        },
        "Triage-jobs->GRM04-Upsert-AAO-Ext-Grievances": {
          "enabled": true,
          "id": "6665bfca-dc6b-46ca-8e42-275b0085dd60",
          "target_job_id": "49e2e6ce-dccc-4887-8aae-4d10cc70116a",
          "source_job_id": "b4f87c46-aac3-4347-bd9e-9ed5d84c22db",
          "condition_type": "js_expression",
          "condition_label": "New AAO Ext form",
          "condition_expression": "state.data.formName == \"Mecanismo de Atención de Peticiones, Quejas y Reclamos\""
        }
      }
    },
    "CAG-Sync-Forms-to-Asana": {
      "id": "0ec46970-7be3-41e7-b0c5-df49246f9218",
      "name": "CAG Sync Forms to Asana",
      "inserted_at": "2025-07-03T13:54:10.634221Z",
      "lock_version": 18,
      "triggers": {
        "webhook": {
          "enabled": false,
          "id": "db3cc0a3-3009-4cb0-857f-5cb2aa9e0a22",
          "type": "webhook"
        }
      },
      "jobs": {
        "Transform-data": {
          "id": "5d3b5734-dc5f-47af-8be9-03d0c860a274",
          "name": "Transform data",
          "body": "// Check out the Job Writing Guide for help getting started:\n// https://docs.openfn.org/documentation/jobs/job-writing-guide\n",
          "adaptor": "@openfn/language-common@2.5.0",
          "project_credential_id": null
        },
        "GRM03-Upsert-Ituri-Grievances-in-Asana": {
          "id": "51869305-a3ca-4a20-8143-a9bfec68e30e",
          "name": "GRM03 Upsert Ituri Grievances in Asana",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n    SubmissionType_Grievance: '1202329899911646',\n    SubmissionType_Suggestion: '1202329899911647',\n    SubmissionType_Request: '1202329899911648',\n    SubmissionType_Feedback: '1202329899911649',\n    ReportFormat_InPerson: '1202330347493011',\n    ReportFormat_VoiceCall: '1202330347494027',\n    ReportFormat_TextMessage: '1202330347498273',\n    ReportFormat_SuggestionBox: '1202330347499327',\n    ReportFormat_Hotline: '1202330347501419',\n    ReportFormat_Email: '1202330347502485',\n    ReportFormat_PostalLetter: '1202330347503544',\n    SubmissionContext_individual: '1202330732062943',\n    SubmissionContext_group: '1202330732067344',\n    SubmissionContext_passive_observation: '1202330732068565',\n    Gender_male: '1202330737362427',\n    Gender_female: '1202330737362428',\n    Gender_mixed_gender: '1202330737362429',\n    Gender_unknown_gender: '1202330737362430',\n    IndigenousPeople_Yes_ips: '1202330755980982',\n    IndigenousPeople_No_ips: '1202330755984093',\n    IndigenousPeople_unknown_ips: '1202330755985164',\n    'Age_<18': '1202330714895607',\n    'Age_19-35': '1202330714895608',\n    'Age_36-50': '1202330714895609',\n    'Age_>50': '1202330714895610',\n    Age_mixed_age: '1202330714895611',\n    Age_unknown_age: '1202330714895612',\n    GrievanceAgainst_Wcs: '1202330466059593',\n    GrievanceAgainst_GovernmentPartner: '1202330466059594',\n    GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n    GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n    GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n    DatePrecision_Yes: '1202330815421248',\n    DatePrecision_No: '1202330815421249',\n    ConfidentialitySensitivity_Yes: '1202330821410493',\n    ConfidentialitySensitivity_No: '1202330821410494'\n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.CaseID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'),\n      custom_fields: {\n        // Fields  belonging to open-ended questions (qxns that accept free text input)\n        '1202329899911593': dataValue('body.StaffName'),\n        '1202329899911595': dataValue('body.CaseID'),\n        '1202329899911597': dataValue('body.StaffEmail'),\n        '1202329899911599': dataValue('body.today'), // The Kobo value \"today\" is used to fill the \"Submission Date\" in Asana\n        '1204411543329531': dataValue('body.SubmissionDate'), // the kobo value \"SubmissionDate\" is used to fill the \"Deposit date\" in Asana\n        '1204398350066782': dataValue('body.SuggestionBoxId'),\n        '1204398351814002': dataValue('body.SuggestionBoxGps'),\n        '1204398351814004': dataValue('body.BoxCollectionDate'),\n        '1202329899911605': dataValue('body.ReporterName'),\n        '1202329899911607': dataValue('body.ReporterContactInformation'),\n        '1202329899911615': dataValue('body.AuthorityGrievanceReporter'),\n        '1202329899911619': dataValue('body.WhereGrievance'),\n        '1202329899911623': dataValue('body.GrievanceDate'),\n        '1202329899911625': dataValue('body.PartiesInvolvedGrievance'),\n        '1202329899911627': dataValue('body.LocalAuthoritiesContacted'),\n        '1202329899911631': dataValue('body.HarmSuffered'),\n        '1202329899911633': dataValue('body.ReliefRequested'),\n        '1202329899911635': dataValue('body.OnlineFolder'),\n        '1202329899911637': dataValue('body.Location'),\n        \n        // Fields  belonging to questions with dropdown or multiple choice\n        '1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n        '1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n        '1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n        '1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n        '1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n        '1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n        '1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n        '1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n        '1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n      }\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM06-Upsert-KBNP-Grievances": {
          "id": "41723b21-5293-49b6-84bc-190363b1f415",
          "name": "GRM06 Upsert KBNP Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n\n  SubmissionType_Grievance: '1203958690339474',\n  SubmissionType_Suggestion: '1203958690339475',\n  SubmissionType_Request: '1203958690339476',\n  SubmissionType_Feedback: '1203958690339477',\n   ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_Prospecting: '1208419056473280',\n  SubmissionContext_individual: '1202330732062943',\n  SubmissionContext_group: '1202330732067344',\n  SubmissionContext_passive_observation: '1202330732068565',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  IndigenousPeople_mixed_group: '1207724962870243',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  DatePrecision_Yes: '1202330815421248',\n  DatePrecision_No: '1202330815421249',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  Groupement_Bakano: '1208521520130881',\n  Groupement_Bakonzo: '1208521520130882',\n  Groupement_BamugubaNord: '1208521520130883',\n  Groupement_BamugubaSud: '1208521520130884',\n  Groupement_Bitale: '1208521520130885',\n  Groupement_Bughore: '1208521520130886',\n  Groupement_Bugobe: '1208406425574584',\n  Groupement_Bunyakiri: '1208406425574588',\n  Groupement_Bushwira: '1208521520130887',\n  Groupement_Cirunga: '1208521520130888',\n  Groupement_Ikoma: '1208521520130889',\n  Groupement_IrhambiKatana: '1208406425574586',\n  Groupement_Irhegabarhonyi: '1208521520130890',\n  Groupement_Izege: '1208521520130891',\n  Groupement_Kalima: '1208521520130892',\n  Groupement_Kalonge: '1208406425574585',\n  Groupement_Kanyola: '1208521520130893',\n  Groupement_Luhago: '1208521520130894',\n  Groupement_MbingaNord: '1208521520130895',\n  Groupement_MbingaSud: '1208406425574587',\n  Groupement_Miti: '1208406425574582',\n  Groupement_Mubugu: '1208521520130896',\n  Groupement_Mudaka: '1208406425574583',\n  Groupement_Musenyi: '1208521520130897',\n  Groupement_Nindja: '1208521520130898',\n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.CaseID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'),\n      custom_fields: {\n       // Fields  belonging to open-ended questions (qxns that accept free text input)\n'1203958690339485': dataValue('body.StaffName'),\n'1203958690339489': dataValue('body.CaseID'),\n'1203958690339493': dataValue('body.StaffEmail'),\n'1203958690339497': dataValue('body.today'), // The Today value in Kobo goes into Submission Date in Asana\n'1203958690356245': dataValue('body.ReporterName'),\n'1203958690356249': dataValue('body.ReporterContactInformation'),\n'1203958690356256': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1203958690356266': dataValue('body.GrievanceDate'),\n'1203958690356270': dataValue('body.PartiesInvolvedGrievance'),\n'1203958690356274': dataValue('body.LocalAuthoritiesContacted'),\n'1203958690374468': dataValue('body.HarmSuffered'),\n'1203958690374472': dataValue('body.ReliefRequested'),\n'1203958690374476': dataValue('body.OnlineFolder'),\n'1203958690374480': dataValue('body.Location'),\n'1205016004799740': dataValue('body.SuggestionBoxId'),\n'1204411543329531': dataValue('body.SubmissionDate'), // The Submission Date in Kobo goes to the Deposit Date in Asana\n'1204398351814004': dataValue('body.BoxCollectionDate'),\n'1204398351814002': dataValue('body.SuggestionBoxGps'),\n\n// Fields  belonging to questions with dropdown or multiple choice\n'1203958686294706': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n'1203958690339473': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n'1208406425574581': state => state.formatMapping[\"Groupement_\" + dataValue('body.Groupement')(state)],\n    },\n  },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@4.1.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM09-Update-PNMD-Grievances": {
          "id": "be01e5c6-7526-49da-820b-78386f3e4bd9",
          "name": "GRM09 Update PNMD Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  SubmissionType_Grievance: '1202329899911646',\n  SubmissionType_Suggestion: '1202329899911647',\n  SubmissionType_Request: '1202329899911648',\n  SubmissionType_Feedback: '1202329899911649',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_PostalLetter: '1202330347503544',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Hotline: '1202330347501419',\n  SubmissionContext_individual: '1202330732062943',\n  SubmissionContext_group: '1202330732067344',\n  SubmissionContext_passive_observation: '1202330732068565',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  DatePrecision_Yes: '1202330815421248',\n  DatePrecision_No: '1202330815421249',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.CaseID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'),\n      custom_fields: {\n        // Fields  belonging to open-ended questions (qxns that accept free text input)\n       '1203711959959076': dataValue('body.StaffName'),\n'1202329899911595': dataValue('body.CaseID'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1204909111988165': dataValue('body.DepositDate'),\n'1202329899911605': dataValue('body.ReporterName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1202329899911623': dataValue('body.GrievanceDate'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1202329899911635': dataValue('body.OnlineFolder'),\n'1204909114362354': dataValue('body.SuggestionBoxId'),\n'1204909114362363': dataValue('body.SuggestionBoxGps'),\n'1204909114362367': dataValue('body.BoxCollectionDate'),\n'1202329899911599': dataValue('body.SubmissionDate'),\n'1204909114384912': dataValue('body.Location'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n// Fields  belonging to questions with dropdown or multiple choice\n'1202593715272940': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n'1204269608862901': state => state.formatMapping[\"Classification_\" + dataValue('body.Classification')(state)],\n      }\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM10-Update-Ndoki-Grievances": {
          "id": "17cd5fb7-75ce-4e55-861c-5ba69c1bd028",
          "name": "GRM10 Update Ndoki Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = \n  {\n  'Grade_Grade 0': '1202593715272941',\n  'Grade_Grade 1': '1202593715272942',\n  'Grade_Grade 2': '1202593715272943',\n  'Grade_Grade 3': '1202593715272944',\n  'Grade_Grade 4': '1202593715272945',\n  'Grade_Grade 5': '1202593715272946',\n  'Grade_Potential 4 or 5': '1204479351083660',\n  'Classification_Safeguards & Human Rights': '1204269608862902',\n  'Classification_Project Implementation & Natural Resources': '1204269608862903',\n  'Classification_Human-Wildlife Conflict': '1204269608862904',\n  'Classification_Management ': '1204269617420857',\n  'Classification_Illegal Activity': '1204269617420858',\n  'Classification_Positive Feedback, Suggestion': '1204269617420859',\n  'Classification_Request or Question': '1204269617420968',\n  Classification_Other: '1204269617420860',\n  SubmissionType_Grievance: '1202329899911646',\n  SubmissionType_Suggestion: '1202329899911647',\n  SubmissionType_Request: '1202329899911648',\n  SubmissionType_Feedback: '1202329899911649',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_PostalLetter: '1202330347503544',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Hotline: '1202330347501419',\n  SubmissionContext_individual: '1202330732062943',\n  SubmissionContext_group: '1202330732067344',\n  SubmissionContext_passive_observation: '1202330732068565',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  DatePrecision_Yes: '1202330815421248',\n  DatePrecision_No: '1202330815421249',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494'\n}\n;\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.CaseID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'),\n      custom_fields: {\n        // Fields  belonging to open-ended questions (qxns that accept free text input)\n'1202329899911595': dataValue('body.CaseID'),\n'1203711959959076': dataValue('body.StaffName'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1202329899911599': dataValue('body.today'),// The Kobo value \"today\" is used to fill the \"Submission Date\" in Asana\n'1204987862967325': dataValue('body.SubmissionDate'), // the kobo value \"SubmissionDate\" is used to fill the \"Deposit date\" in Asana\n'1204987862967339': dataValue('body.SuggestionBoxGps'),\n'1204987862967330': dataValue('body.SuggestionBoxId'),\n'1204987862994295': dataValue('body.BoxCollectionDate'),\n'1202329899911605': dataValue('body.ReporterName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1202329899911623': dataValue('body.GrievanceDate'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1202329899911635': dataValue('body.OnlineFolder'),\n'1204987862994316': dataValue('body.Location'),\n// Fields  belonging to questions with dropdown or multiple choice\n'1202593715272940': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n'1204269608862901': state => state.formatMapping[\"Classification_\" + dataValue('body.Classification')(state)],\n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n      }\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM13-Upsert-Mbe-Mountains-Grievances": {
          "id": "7c466e91-2a3e-4955-81bb-a0d9a2dde715",
          "name": "GRM13 Upsert Mbe Mountains Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  SubmissionType_Grievance: '1202329899911646',\n  SubmissionType_Suggestion: '1202329899911647',\n  SubmissionType_Request: '1202329899911648',\n  SubmissionType_Feedback: '1202329899911649',\n  'SubmissionType_Test case': '1206023522074189',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_PostalLetter: '1202330347503544',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Hotline: '1202330347501419',\n  SubmissionContext_individual: '1202330732062943',\n  SubmissionContext_group: '1202330732067344',\n  SubmissionContext_passive_observation: '1202330732068565',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  DatePrecision_Yes: '1202330815421248',\n  DatePrecision_No: '1202330815421249',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  Village_Abu: '1206427761204002',\n  'Village_Abu Bisu': '1206427761204003',\n  'Village_Kayan 1': '1206427761204004',\n  'Village_Kayan 2': '1206427761204005',\n  'Village_Wula 1': '1206427761204006',\n  'Village_Wula 2': '1206427761204007',\n  Village_Bukalum: '1206427761204008',\n  Village_Bambam: '1206427761204009',\n  'Village_Mbo-mkpang': '1206427761204010'\n};\n\n  return { ...state, formatMapping };\n});\n\nupsertTask(\n  dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1201382240883590', //hardcoded project id\n\n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n          `${dataValue('body.CaseID')(state)} (KoboID:${dataValue('body._id')(state)})`, // !! UPDATE THE ID FIELD TO ALIGN WITH THE KOBO FORM IF NEEDED\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'), // !! UPDATE THE DESCRIPTION FIELD TO ALIGN WITH THE KOBO FORM IF NEEDED\n      custom_fields: {\n          //This tells Asana what fields to update and how to locate them.\n          \n          //The statements below apply to Asana Fields that are for OPEN ENDED\n          //i.e. They accept FREE TEXT INPUT from the Kobo Form\n'1203711959959076': dataValue('body.StaffName'),\n'1202329899911595': dataValue('body.CaseID'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1204987877735031': dataValue('body.DepositDate'), \n'1202329899911599': dataValue('body.today'), // Kobo form field \"Today\" goes into \"SubmissionDate\" field in Asana\n'1204987880815869': dataValue('body.SuggestionBoxId'),\n'1204987880815882': dataValue('body.BoxCollectionDate'),\n'1202329899911605': dataValue('body.ReporterName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1205639010623290': dataValue('body.Village'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1202329899911623': dataValue('body.GrievanceDate'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1202329899911635': dataValue('body.OnlineFolder'),\n'1204987880842598': dataValue('body.Location'),\n\n        // Fields  belonging to questions with dropdown or multiple choice\n'1202593715272940': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n'1204269608862901': state => state.formatMapping[\"Classification_\" + dataValue('body.Classification')(state)],\n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1206427761204001': state => state.formatMapping[\"Village_\" + dataValue('body.Village')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n      },\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n);\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM16-Upsert-Afi-Grievances": {
          "id": "8bdd7b00-c853-4476-8e0b-66e51d2a6552",
          "name": "GRM16 Upsert Afi Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  SubmissionType_Grievance: '1202329899911646',\n  SubmissionType_Suggestion: '1202329899911647',\n  SubmissionType_Request: '1202329899911648',\n  SubmissionType_Feedback: '1202329899911649',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  SubmissionContext_individual: '1202330732062943',\n  SubmissionContext_group: '1202330732067344',\n  SubmissionContext_passive_observation: '1202330732068565',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  DatePrecision_Yes: '1202330815421248',\n  DatePrecision_No: '1202330815421249',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  Village_Buancho: '1208340639080055',\n  Village_Olum: '1208340639080056',\n  Village_Kakubo: '1208340639080057',\n  Village_Esekwe: '1208340639080058',\n  Village_NjuaKaku: '1208340639080059',\n  Village_Boje: '1208340639080060',\n  Village_Katabang: '1208340639080061'\n};\n\n  return { ...state, formatMapping };\n});\n\nupsertTask(\n  dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1201382240883590', //hardcoded project id\n\n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n          `${dataValue('body.CaseID')(state)} (KoboID:${dataValue('body._id')(state)})`, // !! UPDATE THE ID FIELD TO ALIGN WITH THE KOBO FORM IF NEEDED\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'), // !! UPDATE THE DESCRIPTION FIELD TO ALIGN WITH THE KOBO FORM IF NEEDED\n      custom_fields: {\n          //This tells Asana what fields to update and how to locate them.\n          \n          //The statements below apply to Asana Fields that are for OPEN ENDED\n          //i.e. They accept FREE TEXT INPUT from the Kobo Form\n'1203711959959076': dataValue('body.StaffName'),\n'1202329899911595': dataValue('body.CaseID'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1208202649310012': dataValue('body.DepositDate'),\n'1202329899911599': dataValue('body.today'), // Kobo form field \"Today\" goes into \"SubmissionDate\" field in Asana\n'1208202649310017': dataValue('body.SuggestionBoxId'),\n'1208202649310027': dataValue('body.BoxCollectionDate'),\n'1202329899911605': dataValue('body.ReporterName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1202329899911623': dataValue('body.GrievanceDate'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1202329899911635': dataValue('body.OnlineFolder'),\n'1208202649310032': dataValue('body.Location'),\n\n        // Fields  belonging to questions with dropdown or multiple choice\n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n'1207470695842882': state => state.formatMapping[\"Donor_\" + dataValue('body.Donor')(state)],\n'1208340639080054': state => state.formatMapping[\"Village_\" + dataValue('body.Village')(state)],\n      },\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n);\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM17-Upsert-Yankari-Grievances": {
          "id": "732fef2b-7d2f-4336-86a9-9f09f3839946",
          "name": "GRM17 Upsert Yankari Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n SubmissionType_Grievance: '1202329899911646',\n  SubmissionType_Suggestion: '1202329899911647',\n  SubmissionType_Request: '1202329899911648',\n  SubmissionType_Feedback: '1202329899911649',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  SubmissionContext_individual: '1202330732062943',\n  SubmissionContext_group: '1202330732067344',\n  SubmissionContext_passive_observation: '1202330732068565',\n  Village_YelwanDuguri: '1208360193118210',\n  Village_GajiDuguri: '1208360193118211',\n  Village_Kwalla: '1208360193118212',\n  Gender_Male: '1202330737362427',\n  Gender_Female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  Gender_other_gender: '1207852335266397',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  DatePrecision_Yes: '1202330815421248',\n  DatePrecision_No: '1202330815421249',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n};\n\n  return { ...state, formatMapping };\n});\n\nupsertTask(\n  dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1201382240883590', //hardcoded project id\n\n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n          `${dataValue('body.CaseID')(state)} (KoboID:${dataValue('body._id')(state)})`, // !! UPDATE THE ID FIELD TO ALIGN WITH THE KOBO FORM IF NEEDED\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'), // !! UPDATE THE DESCRIPTION FIELD TO ALIGN WITH THE KOBO FORM IF NEEDED\n      custom_fields: {\n          //This tells Asana what fields to update and how to locate them.\n          \n          //The statements below apply to Asana Fields that are for OPEN ENDED\n          //i.e. They accept FREE TEXT INPUT from the Kobo Form\n'1203711959959076': dataValue('body.StaffName'),\n'1202329899911595': dataValue('body.CaseID'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1208202588470235': dataValue('body.DepositDate'),\n'1202329899911599': dataValue('body.today'), // Kobo form field \"Today\" goes into \"SubmissionDate\" field in Asana\n'1208202588470240': dataValue('body.SuggestionBoxId'),\n'1208202588470250': dataValue('body.BoxCollectionDate'),\n'1202329899911605': dataValue('body.ReporterName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1202329899911623': dataValue('body.GrievanceDate'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1202329899911635': dataValue('body.OnlineFolder'),\n'1208202588470255': dataValue('body.Location'),\n        // Fields  belonging to questions with dropdown or multiple choice\n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n'1208360193118209': state => state.formatMapping[\"Village_\" + dataValue('body.Village')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n      },\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n);\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM20-Upsert-Kabobo-Grievances": {
          "id": "d84254e3-0ac4-405c-8bd7-423e553d0a0b",
          "name": "GRM20 Upsert Kabobo Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n    \n  SubmissionType_Grievance: '1209077505622424',\n  SubmissionType_Suggestion: '1209077505622425',\n  SubmissionType_Request: '1209077505622426',\n  SubmissionType_Feedback: '1209077505622427',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_ProjectMeeting: '1208936305975370',\n  ReportFormat_Prospecting: '1208419056473280',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_VoiceCall: '1202330347494027',\n  SubmissionContext_individual: '1202330732062943',\n  SubmissionContext_group: '1202330732067344',\n  SubmissionContext_passive_observation: '1202330732068565',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  IndigenousPeople_mixed_group: '1207724962870243',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  Groupement_Kasangamutowa: '1209077505731521',\n  Groupement_Lambokatenga: '1209077505731523',\n  Groupement_Mahila: '1209077505731520',\n  Groupement_Miketo: '1209077505758635',\n  Groupement_Mulolwa: '1209077505731522',\n  DatePrecision_Yes: '1202330815421248',\n  DatePrecision_No: '1202330815421249',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  \n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.CaseID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'),\n      custom_fields: {\n       // Fields  belonging to open-ended questions (qxns that accept free text input)\n\n'1209077505698841': dataValue('body.today'), // The Today value in Kobo goes into KoboSubmissionDate in Asana\n'1209077505698826': dataValue('body.StaffName'),\n'1209077505698831': dataValue('body.CaseID'),\n'1209077505698836': dataValue('body.StaffEmail'),\n'1204411543329531': dataValue('body.DepositDate'),\n'1209077505731508': dataValue('body.SuggestionBoxId'),\n'1204398351814002': dataValue('body.SuggestionBoxGps'),\n'1204398351814004': dataValue('body.BoxCollectionDate'),\n'1209077505698846': dataValue('body.ReporterName'),\n'1209077505707294': dataValue('body.ReporterContactInformation'),\n'1209077505707299': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1209077505707304': dataValue('body.GrievanceDate'),\n'1209077505707309': dataValue('body.PartiesInvolvedGrievance'),\n'1209077505707314': dataValue('body.LocalAuthoritiesContacted'),\n'1209077505707319': dataValue('body.HarmSuffered'),\n'1209077505707324': dataValue('body.ReliefRequested'),\n'1209077505731499': dataValue('body.OnlineFolder'),\n\n// Fields  belonging to questions with dropdown or multiple choice\n\n'1209077505622423': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1209077505731519': state => state.formatMapping[\"Groupement_\" + dataValue('body.Groupement')(state)],\n'1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n\n    },\n  },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        }
      },
      "edges": {
        "webhook->Transform-data": {
          "enabled": true,
          "id": "8e1b22b4-4286-4ab8-88a8-7f7861c86a35",
          "target_job_id": "5d3b5734-dc5f-47af-8be9-03d0c860a274",
          "source_trigger_id": "db3cc0a3-3009-4cb0-857f-5cb2aa9e0a22",
          "condition_type": "always"
        },
        "Transform-data->GRM03-Upsert-Ituri-Grievances-in-Asana": {
          "enabled": true,
          "id": "3da5d647-6116-4903-826f-4fb4e721659c",
          "target_job_id": "51869305-a3ca-4a20-8143-a9bfec68e30e",
          "source_job_id": "5d3b5734-dc5f-47af-8be9-03d0c860a274",
          "condition_type": "js_expression",
          "condition_label": "New OWR Form",
          "condition_expression": "state.data.formName == \"OWR feedback form\""
        },
        "Transform-data->GRM06-Upsert-KBNP-Grievances": {
          "enabled": true,
          "id": "07b6a5f1-40d4-4a5d-8627-08d003366f2e",
          "target_job_id": "41723b21-5293-49b6-84bc-190363b1f415",
          "source_job_id": "5d3b5734-dc5f-47af-8be9-03d0c860a274",
          "condition_type": "js_expression",
          "condition_label": "New KBNP GRM",
          "condition_expression": "state.data.formName == \"KBNP Feedback Form\""
        },
        "Transform-data->GRM09-Update-PNMD-Grievances": {
          "enabled": true,
          "id": "2d14f393-e36c-4630-8db0-82e07263200b",
          "target_job_id": "be01e5c6-7526-49da-820b-78386f3e4bd9",
          "source_job_id": "5d3b5734-dc5f-47af-8be9-03d0c860a274",
          "condition_type": "js_expression",
          "condition_label": "New PNMD GRM",
          "condition_expression": "state.data.formName == \"GRM PNMD 2023\""
        },
        "Transform-data->GRM10-Update-Ndoki-Grievances": {
          "enabled": true,
          "id": "a800f15f-a399-4444-89a2-6c5bf459efdf",
          "target_job_id": "17cd5fb7-75ce-4e55-861c-5ba69c1bd028",
          "source_job_id": "5d3b5734-dc5f-47af-8be9-03d0c860a274",
          "condition_type": "js_expression",
          "condition_label": "New PNNN form",
          "condition_expression": "state.data.formName == \"NNNP_Feedback_Form\""
        },
        "Transform-data->GRM13-Upsert-Mbe-Mountains-Grievances": {
          "enabled": true,
          "id": "eb66497c-598a-44be-8695-9c0a13fe2f91",
          "target_job_id": "7c466e91-2a3e-4955-81bb-a0d9a2dde715",
          "source_job_id": "5d3b5734-dc5f-47af-8be9-03d0c860a274",
          "condition_type": "js_expression",
          "condition_label": "New Mbe Form",
          "condition_expression": "state.data.formName == \"Mbe Mountains GRM\""
        },
        "Transform-data->GRM16-Upsert-Afi-Grievances": {
          "enabled": true,
          "id": "4841a168-28d3-4cb2-8376-43410555ce4c",
          "target_job_id": "8bdd7b00-c853-4476-8e0b-66e51d2a6552",
          "source_job_id": "5d3b5734-dc5f-47af-8be9-03d0c860a274",
          "condition_type": "js_expression",
          "condition_label": "New Afi Form",
          "condition_expression": "state.data.formName == \"Afi GRM\""
        },
        "Transform-data->GRM17-Upsert-Yankari-Grievances": {
          "enabled": true,
          "id": "c07b7d51-ca85-45d5-8cd2-b1eb48872364",
          "target_job_id": "732fef2b-7d2f-4336-86a9-9f09f3839946",
          "source_job_id": "5d3b5734-dc5f-47af-8be9-03d0c860a274",
          "condition_type": "js_expression",
          "condition_label": "New YGR Form",
          "condition_expression": "state.data.formName == \"YGR GRM\""
        },
        "Transform-data->GRM20-Upsert-Kabobo-Grievances": {
          "enabled": true,
          "id": "cf9f5e7b-c12f-4154-8b67-0ac31f5eb325",
          "target_job_id": "d84254e3-0ac4-405c-8bd7-423e553d0a0b",
          "source_job_id": "5d3b5734-dc5f-47af-8be9-03d0c860a274",
          "condition_type": "js_expression",
          "condition_label": "New Kabobo Form",
          "condition_expression": "state.data.formName == \"KABOBO GRM\""
        }
      }
    },
    "EAW-Sync-Forms-to-Asana.": {
      "id": "a195906a-3908-4adc-978e-af131a8f8a6d",
      "name": "EAW Sync Forms to Asana.",
      "inserted_at": "2025-07-03T13:54:31.225403Z",
      "lock_version": 4,
      "triggers": {
        "webhook": {
          "enabled": false,
          "id": "49574838-7a92-4850-8e20-b2002bce8734",
          "type": "webhook"
        }
      },
      "jobs": {
        "Triage-jobs": {
          "id": "046ce8ac-c1fc-49c0-804e-973416afc31e",
          "name": "Triage jobs",
          "body": "// Check out the Job Writing Guide for help getting started:\n// https://docs.openfn.org/documentation/jobs/job-writing-guide\n",
          "adaptor": "@openfn/language-common@latest",
          "project_credential_id": null
        },
        "GRM05-Upsert-Blue-Future-Grievances": {
          "id": "11e74603-aef6-4aab-8991-e204aab570cd",
          "name": "GRM05 Upsert Blue Future Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n Anonymous_Anonymous: '1203977086782816',\n  Language_Portuguese: '1203977284295127',\n  Language_Emakua: '1203977284295128',\n  Language_English: '1203977284295129',\n  Language_OtherLanguage: '1203977284295130',\n  GrievanceOrSuggestion_Grievance: '1203711963400189',\n  GrievanceOrSuggestion_Suggestion: '1203711963400190',\n  GrievanceOrSuggestion_Doubts: '1203977213874277',\n  GrievanceOrSuggestion_OtherType: '1203977213874278',\n  Frequency_OneTime: '1203977373054583',\n  Frequency_MultipleTimes: '1203977373054584',\n  Frequency_Ongoing: '1203977373054585',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_PostalLetter: '1202330347503544',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  'ReportLocation_Option 1': '1203703265138772',\n  'ReportLocation_Option 2': '1203703265138773',\n  'ReporterLocation_Option 1': '1203703265138776',\n  'ReporterLocation_Option 2': '1203703265138777',\n  RegionalProgram_Global: '1203712073216294',\n  RegionalProgram_EastAfricaAndMadagascar: '1203712073216295',\n  Country_AllCountryPrograms: '1203712064585506',\n  Country_Mozambique: '1203712075492389',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494'\n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.calculation')(state)}`, // the \"calculation\" field in Kobo is the GrievanceID (error when creating the form - this cannot be changed now)\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'),\n      custom_fields: {\n        // Fields  belonging to open-ended questions (qxns that accept free text input)\n'1203712060006636': dataValue('body.Email') || dataValue('body.Mail')|| dataValue('body.Phone'),\n'1203977275818025': dataValue('body.OtherLanguage'),\n'1203977255317509': dataValue('body.OtherType'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1203985595067011': dataValue('body.WhenGrievance'),\n'1203977007681973': dataValue('body.TimesGrievance'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1203712064304976': dataValue('body.ReporterFullName'),\n'1201884379104074': dataValue('body.calculation'), // the \"calculation\" field in Kobo is the GrievanceID \n'1203711932409666': dataValue('body.today'),\n\n        \n        // Fields  belonging to questions with dropdown or multiple choice\n       '1203977086782815': state => state.formatMapping[\"Anonymous_\" + dataValue('body.Anonymous')(state)],\n'1203977284295126': state => state.formatMapping[\"Language_\" + dataValue('body.Language')(state)],\n'1203711963400188': state => state.formatMapping[\"GrievanceOrSuggestion_\" + dataValue('body.GrievanceOrSuggestion')(state)],\n'1203977373054582': state => state.formatMapping[\"Frequency_\" + dataValue('body.Frequency')(state)],\n    },\n  },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM07-Upsert-Ruaha-Katavi-Grievances": {
          "id": "dfccb41f-3fae-4ad3-862c-6ac1f5136722",
          "name": "GRM07 Upsert Ruaha Katavi Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  'Grade_Grade 0': '1204127412235066',\n  'Grade_Grade 1': '1204127412235067',\n  'Grade_Grade 2': '1204127412235068',\n  'Grade_Grade 3': '1204127412235069',\n  'Grade_Grade 4': '1204127412235070',\n  'Grade_Grade 5': '1204127412235071',\n  GrievanceOrSuggestion_Grievance: '1203711963400189',\n  GrievanceOrSuggestion_Suggestion: '1203711963400190',\n  GrievanceOrSuggestion_Doubts: '1203977213874277',\n  GrievanceOrSuggestion_OtherType: '1203977213874278',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_PostalLetter: '1202330347503544',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Hotline: '1202330347501419',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494'\n};\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.start')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptionGrievance'),\n      custom_fields: {\n       // Fields  belonging to open-ended questions (qxns that accept free text input)\n'1204127413705636': dataValue('body.start'),\n'1204127467188879': dataValue('body.Country'),\n'1204127467188881': dataValue('body.Region'),\n'1204127467188883': dataValue('body.District'),\n'1204127413724358': dataValue('body.Village'),\n'1204127413705632': dataValue('body.StaffName'),\n'1204127413705640': dataValue('body.StaffEmail'),\n'1204127413705644': dataValue('body.DateGrievanceEntered'),\n'1204127413705650': dataValue('body.ReporterFullName'),\n'1204127413715692': dataValue('body.ReporterContactInformation'),\n'1204127413715699': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1204127413715709': dataValue('body.WhenGrievance'),\n'1204127413715713': dataValue('body.PartiesInvolvedGrievance'),\n'1204127413715717': dataValue('body.LocalAuthoritiesContacted'),\n'1204127413724346': dataValue('body.HarmSuffered'),\n'1204127413724350': dataValue('body.ReliefRequested'),\n'1204127413724354': dataValue('body.OnlineFolder'),\n\n// Fields  belonging to questions with dropdown or multiple choice\n'1204127412235065': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n'1203711963400188': state => state.formatMapping[\"GrievanceOrSuggestion_\" + dataValue('body.GrievanceOrSuggestion')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n    },\n  },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM08-Upsert-NiassaGrievances": {
          "id": "d346d2c5-0e5e-4ad4-815c-ec8eef9dd32b",
          "name": "GRM08 Upsert NiassaGrievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  GrievanceOrSuggestion_Grievance: '1203711963400189',\n  GrievanceOrSuggestion_Suggestion: '1203711963400190',\n  GrievanceOrSuggestion_Doubts: '1203977213874277',\n  GrievanceOrSuggestion_OtherType: '1203977213874278',\n  'CategoryGRM_Category 1': '1204346774994409',\n  'CategoryGRM_Category 2': '1204346774994410',\n  'CategoryGRM_Category 3': '1204346774994411',\n  'CategoryGRM_Category 4': '1204346774994412',\n  'CategoryGRM_Category 5': '1204346774994413',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_PostalLetter: '1202330347503544',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Hotline: '1202330347501419',\n  'GrievanceStatus _BeingReviewed': '1192850232576003',\n  'GrievanceStatus _NotAssigned': '1187328718760775',\n  'GrievanceStatus _Dismissed': '1187674280676653',\n  'GrievanceStatus _OnHold': '1187328718760778',\n  'GrievanceStatus _BeingInvestigated': '1187328718760776',\n  'GrievanceStatus _Resolved': '1187328718760777',\n  'GrievanceStatus _RemediationBeingMonitored': '1192772373678248',\n  RegionalProgram_Global: '1203712073216294',\n  RegionalProgram_EastAfricaAndMadagascar: '1203712073216295',\n  Country_AllCountryPrograms: '1203712064585506',\n  Country_Mozambique: '1203712075492389',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494'\n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.GrievanceId')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptionGrievance'),\n      custom_fields: {\n       // Fields  belonging to open-ended questions (qxns that accept free text input)\n'1203711959959076': dataValue('body.StaffName'),\n'1201884379104074': dataValue('body.GrievanceId'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1203711932409666': dataValue('body.DateGrievanceEntered'),\n'1206195626473140': dataValue('body.ReportLocation'),\n'1206195626473142': dataValue('body.ReporterLocation'),\n'1203712064304976': dataValue('body.ReporterFullName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1204346774966584': dataValue('body.WhenGrievance'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1203712121887316': dataValue('body.ActionsTaken'),\n'1203711923560809': dataValue('body.OneDriveFolder'),\n\n// Fields  belonging to questions with dropdown or multiple choice\n'1203711963400188': state => state.formatMapping[\"GrievanceOrSuggestion_\" + dataValue('body.GrievanceOrSuggestion')(state)],\n'1204346774986645': state => state.formatMapping[\"CategoryGRM_\" + dataValue('body.CategoryGRM')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1204346774986620': state => state.formatMapping[\"ReportLocation_\" + dataValue('body.ReportLocation')(state)],\n'1187328718760774': state => state.formatMapping[\"GrievanceStatus _\" + dataValue('body.GrievanceStatus ')(state)],\n'1204346774986628': state => state.formatMapping[\"ReporterLocation_\" + dataValue('body.ReporterLocation')(state)],\n'1203712073216293': state => state.formatMapping[\"RegionalProgram_\" + dataValue('body.RegionalProgram')(state)],\n'1203712064585505': state => state.formatMapping[\"Country_\" + dataValue('body.Country')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n    },\n  },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM12-Upsert-Mamabay-Grievances": {
          "id": "1937f7e2-a5f9-4db6-8d82-4fa73436e2a6",
          "name": "GRM12 Upsert Mamabay Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  GrievanceOrSuggestion_Grievance: '1202329899911646', //SubmissionType in Asana = GrievanceOrSuggestion in Kobo\n  GrievanceOrSuggestion_Suggestion: '1202329899911647', //SubmissionType in Asana = GrievanceOrSuggestion in Kobo\n  GrievanceOrSuggestion_Request: '1202329899911648', //SubmissionType in Asana = GrievanceOrSuggestion in Kobo\n  GrievanceOrSuggestion_Feedback: '1202329899911649', //SubmissionType in Asana = GrievanceOrSuggestion in Kobo\n  WcsStaff_Yes: '1208262949429785',\n  WcsStaff_No: '1208262949429786',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_PostalLetter: '1202330347503544',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Hotline: '1202330347501419',\n  Anonymous_Yes: '1203977086782816',\n  Anonymous_No: '1208270620741491', \n  Gender_Male: '1202330737362427',\n  Gender_Female: '1202330737362428',\n  Gender_Male: '1202330737362427',\n  Gender_Female: '1202330737362428',\n  'Gender_Mixed gender (group)': '1202330737362429',\n  'Gender_Unknown gender': '1202330737362430',\n  'Gender_Other gender': '1207852335266397',\n  'Gender_Prefer not to report': '1207852335266398',\n   'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  ReportLocation_Sector1: '1205812185361966',\n  ReportLocation_Sector2: '1205812185361967',\n  ReportLocation_Sector3: '1205812185361968',\n  ReportLocation_Sector4: '1205812185361969',\n  ReportLocation_Sector5: '1205812185361970',\n  ReportLocation_Sector6: '1205812185361971',\n  ReportLocation_Sector7: '1205812185361972',\n  ReportLocation_Sector8: '1205812185361973',\n  ReportLocation_Sector9: '1205812185361974',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494'\n};\n\n  return { ...state, formatMapping };\n});\n\nupsertTask(\n  dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1201382240883590', //hardcoded project id\n\n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n          `${dataValue('body.GrievanceId')(state)} (KoboID:${dataValue('body._id')(state)})`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptionGrievance'),\n      custom_fields: {\n          //This tells Asana what fields to update and how to locate them.\n          \n          //The statements below apply to Asana Fields that are for OPEN ENDED\n          //i.e. They accept FREE TEXT INPUT from the Kobo Form\n'1203711959959076': dataValue('body.StaffName'),\n'1201884379104074': dataValue('body.GrievanceId'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1203711932409666': dataValue('body.DateGrievanceEntered'),\n'1205812185585254': dataValue('body.ReporterLocation'),\n'1202329899911605': dataValue('body.ReporterName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1202329899911623': dataValue('body.GrievanceDate'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1203712121887316': dataValue('body.ActionsTaken'),\n'1202329899911635': dataValue('body.OnlineFolder'),\n'1202329899911599': dataValue('body.SubmissionDate'),\n          \n          //The statements below apply to Asana Fields that have multiplechoice / DropDown options\n          //i.e. They require that the user selects specific options from the Kobo Form dropdown list.\n          // These are the questions that require the MAPPING TABLES at the top of this page.\n          //The mapping key-value pairs are obtained using a console.log tht runs in the Fetch GID Job\n         /* '0000000000000000': dataValue('body.WhereGrievance'), */ //Grievance Date field missing in Asana  \n'1202329899911645': state => state.formatMapping[\"GrievanceOrSuggestion_\" + dataValue('body.GrievanceOrSuggestion')(state)], //SubmissionType in Asana = GrievanceOrSuggestion in Kobo\n'1208262949429784': state => state.formatMapping[\"WcsStaff_\" + dataValue('body.WcsStaff')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1205812185361965': state => state.formatMapping[\"ReportLocation_\" + dataValue('body.ReportLocation')(state)],\n'1203977086782815': state => state.formatMapping[\"Anonymous_\" + dataValue('body.Anonymous')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n      },\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n);\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM21-Upsert-TZ-Marine-Grievances": {
          "id": "20511915-2030-4a5a-8006-029a36cf6867",
          "name": "GRM21 Upsert TZ Marine Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n    \n  SubmissionType_Grievance: '1202329899911646',\n  SubmissionType_Suggestion: '1202329899911647',\n  SubmissionType_Request: '1202329899911648',\n  SubmissionType_Feedback: '1202329899911649',\n  Area_TanzaniaMainland: '1209399297109676',\n  Area_ZanzibarIsland: '1209399297109677',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_ProjectMeeting: '1208936305975370',\n  ReportFormat_Prospecting: '1208419056473280',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_VoiceCall: '1202330347494027',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceReceiver_VillageChairperson: '1209399297109682',\n  GrievanceReceiver_VillageExecutive: '1209399297109683',\n  GrievanceReceiver_RespectiveCommitteeTZ: '1209399297109684',\n  GrievanceReceiver_WardExecutive: '1209399297109685',\n  GrievanceReceiver_RespectiveDistrictDepartment: '1209399297109686',\n  GrievanceReceiver_Sheha: '1209399297109687',\n  GrievanceReceiver_ShehaMember: '1209399297109688',\n  GrievanceReceiver_RespectiveCommitteeZI: '1209399297109689',\n  GrievanceReceiver_RespectiveDistrict: '1209399297109690',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  \n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.CaseID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptionGrievance'),\n      custom_fields: {\n       // Fields  belonging to open-ended questions (qxns that accept free text input)\n\n'1204411543329531': dataValue('body.DepositDate'),\n'1209399308955031': dataValue('body.StaffName'),\n'1209399308955036': dataValue('body.CaseID'),\n'1209399309046632': dataValue('body.Country'),\n'1209399309046637': dataValue('body.Region'),\n'1209399309046642': dataValue('body.District'),\n'1209399309046627': dataValue('body.Village'),\n'1209399308955046': dataValue('body.DateGrievanceEntered'),\n'1209399308955051': dataValue('body.ReporterFullName'),\n'1209399308955056': dataValue('body.ReporterContactInformation'),\n'1209399308955061': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1209399308989909': dataValue('body.WhenGrievance'),\n'1209399308989914': dataValue('body.PartiesInvolvedGrievance'),\n'1209399308989919': dataValue('body.LocalAuthoritiesContacted'),\n'1209399308989929': dataValue('body.ReliefRequested'),\n'1203712121887316': dataValue('body.ActionsTaken'),\n'1209399308989924': dataValue('body.HarmSuffered'),\n'1209399308989934': dataValue('body.OnlineFolder'),\n'1209399303211161': dataValue('body.today'),// The Today value in Kobo goes into KoboSubmissionDate in Asana\n\n// Fields  belonging to questions with dropdown or multiple choice\n\n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1209399297109675': state => state.formatMapping[\"Area_\" + dataValue('body.Area')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1209399297109681': state => state.formatMapping[\"GrievanceReceiver_\" + dataValue('body.GrievanceReceiver')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n    },\n  },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM23-Upsert-Mada-NO-Grievances": {
          "id": "cb17a9d4-930e-4a6d-8fbe-5181899f8d8e",
          "name": "GRM23 Upsert Mada NO Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  SubmissionType_Grievance: '1202329899911646', \n  SubmissionType_Suggestion: '1202329899911647', \n  SubmissionType_Request: '1202329899911648', \n  SubmissionType_Feedback: '1202329899911649', \n  WcsStaff_Yes: '1208262949429785',\n  WcsStaff_No: '1208262949429786',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_PostalLetter: '1202330347503544',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Hotline: '1202330347501419',\n  Anonymous_Yes: '1203977086782816',\n  Anonymous_No: '1208270620741491', \n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  ReportLocation_Sector1: '1205812185361966',\n  ReportLocation_Sector2: '1205812185361967',\n  ReportLocation_Sector3: '1205812185361968',\n  ReportLocation_Sector4: '1205812185361969',\n  ReportLocation_Sector5: '1205812185361970',\n  ReportLocation_Sector6: '1205812185361971',\n  ReportLocation_Sector7: '1205812185361972',\n  ReportLocation_Sector8: '1205812185361973',\n  ReportLocation_Sector9: '1205812185361974',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494'\n};\n\n  return { ...state, formatMapping };\n});\nupsertTask(\n  dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1201382240883590', //hardcoded project id\n\n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n          `${dataValue('body.GrievanceId')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptionGrievance'),\n      custom_fields: {\n          //This tells Asana what fields to update and how to locate them.\n          \n          //The statements below apply to Asana Fields that are for OPEN ENDED\n          //i.e. They accept FREE TEXT INPUT from the Kobo Form\n'1203711959959076': dataValue('body.StaffName'), '1201884379104074': dataValue('body.GrievanceId'), '1203712049265363': dataValue('body.StaffEmail'), '1203711932409666': dataValue('body.DateGrievanceEntered'), '1205812185585254': dataValue('body.ReporterLocation'), '1202329899911605': dataValue('body.ReporterName'), '1203712060006636': dataValue('body.ReporterContactInformation'), '1203712112458773': dataValue('body.AuthorityGrievanceReporter'), '1202329899911619': dataValue('body.WhereGrievance'), '1202329899911623': dataValue('body.GrievanceDate'), '1203712125372990': dataValue('body.PartiesInvolvedGrievance'), '1203712145400954': dataValue('body.LocalAuthoritiesContacted'), '1203712150593482': dataValue('body.HarmSuffered'), '1203712149463009': dataValue('body.ReliefRequested'), '1203712121887316': dataValue('body.ActionsTaken'), '1202329899911635': dataValue('body.OnlineFolder'), '1202329899911599': dataValue('body.SubmissionDate'),\n          \n          //The statements below apply to Asana Fields that have multiplechoice / DropDown options\n          //i.e. They require that the user selects specific options from the Kobo Form dropdown list.\n          // These are the questions that require the MAPPING TABLES at the top of this page.\n          //The mapping key-value pairs are obtained using a console.log tht runs in the Fetch GID Job\n         /* '0000000000000000': dataValue('body.WhereGrievance'), */ //Grievance Date field missing in Asana  \n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)], //SubmissionType in Asana = GrievanceOrSuggestion in Kobo '1208262949429784': state => state.formatMapping[\"WcsStaff_\" + dataValue('body.WcsStaff')(state)], '1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)], '1205812185361965': state => state.formatMapping[\"ReportLocation_\" + dataValue('body.ReportLocation')(state)], '1203977086782815': state => state.formatMapping[\"Anonymous_\" + dataValue('body.Anonymous')(state)], '1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)], '1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)], '1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)], '1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n      },\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n);\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM24-Upsert-Mada-SO-Grievances": {
          "id": "e0e61cd0-3470-4abe-8bea-6acc590e8e86",
          "name": "GRM24 Upsert Mada SO Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n WcsStaff_Yes: '1208262949429785',\n  WcsStaff_No: '1208262949429786',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_ProjectMeeting: '1208936305975370',\n  ReportFormat_Prospecting: '1208419056473280',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportLocation_Sector1: '1210486439085793',\n  ReportLocation_Sector2: '1210486439111084',\n  ReportLocation_Sector3: '1210486439111085',\n  ReportLocation_Sector4: '1210486439111086',\n  ReportLocation_Sector5: '1210486439111087',\n  ReportLocation_Sector6: '1210486439111088',\n  ReportLocation_Sector7: '1210486439111089',\n  ReportLocation_Sector8: '1210486439111090',\n  ReportLocation_Sector9: '1210486439111091',\n  ReportLocation_Masoala: '1210486439111092',\n  Anonymous_Yes: '1203977086782816',\n  Anonymous_No: '1208270620741491',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n\n};\n\n  return { ...state, formatMapping };\n});\n\nupsertTask(\n  dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1201382240883590', //hardcoded project id\n\n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n          `${dataValue('body.GrievanceId')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptionGrievance'),\n      custom_fields: {\n          //This tells Asana what fields to update and how to locate them.\n          \n          //The statements below apply to Asana Fields that are for OPEN ENDED\n          //i.e. They accept FREE TEXT INPUT from the Kobo Form\n'1203712049265363': dataValue('body.StaffEmail'),\n'1201884379104074': dataValue('body.GrievanceId'),\n'1203711932409666': dataValue('body.DateGrievanceEntered'),\n'1210486439111108': dataValue('body.ReporterLocation'),\n'1202329899911605': dataValue('body.ReporterName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1202329899911623': dataValue('body.GrievanceDate'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1203712121887316': dataValue('body.ActionsTaken'),\n'1202329899911635': dataValue('body.OnlineFolder'),\n'1202329899911599': dataValue('body.SubmissionDate'),\n          \n          //The statements below apply to Asana Fields that have multiplechoice / DropDown options\n          //i.e. They require that the user selects specific options from the Kobo Form dropdown list.\n          // These are the questions that require the MAPPING TABLES at the top of this page.\n          //The mapping key-value pairs are obtained using a console.log tht runs in the Fetch GID Job\n         /* '0000000000000000': dataValue('body.WhereGrievance'), */ //Grievance Date field missing in Asana  \n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1208262949429784': state => state.formatMapping[\"WcsStaff_\" + dataValue('body.WcsStaff')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1210486439085792': state => state.formatMapping[\"ReportLocation_\" + dataValue('body.ReportLocation')(state)],\n'1203977086782815': state => state.formatMapping[\"Anonymous_\" + dataValue('body.Anonymous')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n'1207470695842882': state => state.formatMapping[\"Donor_\" + dataValue('body.Donor')(state)],\n'1208023920549836': state => state.formatMapping[\"Type de grief_\" + dataValue('body.Type de grief')(state)],\n'1210486439111114': state => state.formatMapping[\"GrievanceYear_\" + dataValue('body.GrievanceYear')(state)],\n'1139718444554297': state => state.formatMapping[\"Priority_\" + dataValue('body.Priority')(state)],\n      },\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n);\n",
          "adaptor": "@openfn/language-asana@2.1.6",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM25-Upsert-Mada-Interne": {
          "id": "598a67e3-5405-4037-8fb9-bae809226a43",
          "name": "GRM25 Upsert Mada Interne",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n WcsStaff_Yes: '1208262949429785',\n  WcsStaff_No: '1208262949429786',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_ProjectMeeting: '1208936305975370',\n  ReportFormat_Prospecting: '1208419056473280',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportLocation_Sector1: '1210513334764351',\n  ReportLocation_Sector2: '1210513334764352',\n  ReportLocation_Sector3: '1210513334764353',\n  ReportLocation_Sector4: '1210513334764354',\n  ReportLocation_Sector5: '1210513334764355',\n  ReportLocation_Sector6: '1210513334764356',\n  ReportLocation_Sector7: '1210513334764357',\n  ReportLocation_Sector8: '1210513334764358',\n  ReportLocation_Sector9: '1210513334764359',\n  ReportLocation_Masoala: '1210513334764360',\n  Anonymous_Yes: '1203977086782816',\n  Anonymous_No: '1208270620741491',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n\n};\n\n  return { ...state, formatMapping };\n});\n\nupsertTask(\n  dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1201382240883590', //hardcoded project id\n\n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n          `${dataValue('body.GrievanceId')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptionGrievance'),\n      custom_fields: {\n          //This tells Asana what fields to update and how to locate them.\n          \n          //The statements below apply to Asana Fields that are for OPEN ENDED\n          //i.e. They accept FREE TEXT INPUT from the Kobo Form\n'1203711959959076': dataValue('body.StaffName'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1201884379104074': dataValue('body.GrievanceId'),\n'1203711932409666': dataValue('body.DateGrievanceEntered'),\n'1210513334764376': dataValue('body.ReporterLocation'),\n'1202329899911605': dataValue('body.ReporterName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1202329899911623': dataValue('body.GrievanceDate'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1203712121887316': dataValue('body.ActionsTaken'),\n'1202329899911635': dataValue('body.OnlineFolder'),\n'1202329899911599': dataValue('body.SubmissionDate'),\n          \n          //The statements below apply to Asana Fields that have multiplechoice / DropDown options\n          //i.e. They require that the user selects specific options from the Kobo Form dropdown list.\n          // These are the questions that require the MAPPING TABLES at the top of this page.\n          //The mapping key-value pairs are obtained using a console.log tht runs in the Fetch GID Job\n         /* '0000000000000000': dataValue('body.WhereGrievance'), */ //Grievance Date field missing in Asana  \n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1208262949429784': state => state.formatMapping[\"WcsStaff_\" + dataValue('body.WcsStaff')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1210513334764350': state => state.formatMapping[\"ReportLocation_\" + dataValue('body.ReportLocation')(state)],\n'1203977086782815': state => state.formatMapping[\"Anonymous_\" + dataValue('body.Anonymous')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n      },\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n);\n",
          "adaptor": "@openfn/language-asana@2.1.6",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        }
      },
      "edges": {
        "webhook->Triage-jobs": {
          "enabled": true,
          "id": "a8a61644-d457-470e-83d9-9362d2925e73",
          "target_job_id": "046ce8ac-c1fc-49c0-804e-973416afc31e",
          "source_trigger_id": "49574838-7a92-4850-8e20-b2002bce8734",
          "condition_type": "always"
        },
        "Triage-jobs->GRM05-Upsert-Blue-Future-Grievances": {
          "enabled": true,
          "id": "002d3eae-e636-47aa-8fe8-0782762ca67d",
          "target_job_id": "11e74603-aef6-4aab-8991-e204aab570cd",
          "source_job_id": "046ce8ac-c1fc-49c0-804e-973416afc31e",
          "condition_type": "js_expression",
          "condition_label": "New Blue Future GRM",
          "condition_expression": "state.data.formName == \"Public Grievance Form\"\n"
        },
        "Triage-jobs->GRM07-Upsert-Ruaha-Katavi-Grievances": {
          "enabled": true,
          "id": "a29f743e-8fca-41ea-8f8a-eda7f0e77af5",
          "target_job_id": "dfccb41f-3fae-4ad3-862c-6ac1f5136722",
          "source_job_id": "046ce8ac-c1fc-49c0-804e-973416afc31e",
          "condition_type": "js_expression",
          "condition_label": "New Ruaha Katavi Form",
          "condition_expression": "state.data.formName == \"GRM WCS Ruaha Katavi Kobo Form\"\n"
        },
        "Triage-jobs->GRM08-Upsert-NiassaGrievances": {
          "enabled": true,
          "id": "f89c6f3a-25ff-4230-8344-bbe8b6d405ac",
          "target_job_id": "d346d2c5-0e5e-4ad4-815c-ec8eef9dd32b",
          "source_job_id": "046ce8ac-c1fc-49c0-804e-973416afc31e",
          "condition_type": "js_expression",
          "condition_label": "New Niassa Form",
          "condition_expression": "state.data.formName == \"Formulário de ocorrências da Reserva Especial do Niassa\"\n"
        },
        "Triage-jobs->GRM12-Upsert-Mamabay-Grievances": {
          "enabled": true,
          "id": "89fb810f-0f9d-4aab-8d9f-06d9308636f1",
          "target_job_id": "1937f7e2-a5f9-4db6-8d82-4fa73436e2a6",
          "source_job_id": "046ce8ac-c1fc-49c0-804e-973416afc31e",
          "condition_type": "js_expression",
          "condition_label": "New Mamabay Form",
          "condition_expression": "state.data.formName == \"Mamabay Grievance Intake Form\"\n"
        },
        "Triage-jobs->GRM21-Upsert-TZ-Marine-Grievances": {
          "enabled": true,
          "id": "3409ab61-369c-4a81-8875-ffcdde11e7b8",
          "target_job_id": "20511915-2030-4a5a-8006-029a36cf6867",
          "source_job_id": "046ce8ac-c1fc-49c0-804e-973416afc31e",
          "condition_type": "js_expression",
          "condition_label": "New TZ Marine form",
          "condition_expression": "state.data.formName == \"GRM_Marine program\"\n"
        },
        "Triage-jobs->GRM23-Upsert-Mada-NO-Grievances": {
          "enabled": true,
          "id": "df2b57d5-8d62-49f3-81a6-6b8af38baa44",
          "target_job_id": "cb17a9d4-930e-4a6d-8fbe-5181899f8d8e",
          "source_job_id": "046ce8ac-c1fc-49c0-804e-973416afc31e",
          "condition_type": "js_expression",
          "condition_label": "New Mada NO Form",
          "condition_expression": "state.data.formName == \"GRM Nord Ouest Madagascar\"\n"
        },
        "Triage-jobs->GRM24-Upsert-Mada-SO-Grievances": {
          "enabled": true,
          "id": "1aa7ef07-19e7-44ac-8e2f-dcc0cc34a63f",
          "target_job_id": "e0e61cd0-3470-4abe-8bea-6acc590e8e86",
          "source_job_id": "046ce8ac-c1fc-49c0-804e-973416afc31e",
          "condition_type": "js_expression",
          "condition_label": "New Mada SO Form",
          "condition_expression": "state.data.formName == \"GRM Sud Ouest Madagascar\"\n"
        },
        "Triage-jobs->GRM25-Upsert-Mada-Interne": {
          "enabled": true,
          "id": "84263053-4c1d-4146-8cca-7c9b25d895c6",
          "target_job_id": "598a67e3-5405-4037-8fb9-bae809226a43",
          "source_job_id": "046ce8ac-c1fc-49c0-804e-973416afc31e",
          "condition_type": "js_expression",
          "condition_label": "New Mada Interne Form",
          "condition_expression": "state.data.formName == \"GRM Interne Madagascar\"\n"
        }
      }
    },
    "MWC-Sync-Forms-to-Asana": {
      "id": "5acac8e7-4d42-4ceb-ba47-01a341379863",
      "name": "MWC Sync Forms to Asana",
      "inserted_at": "2025-07-03T13:55:37.113858Z",
      "lock_version": 4,
      "triggers": {
        "webhook": {
          "enabled": false,
          "id": "0cdddd79-5d1d-4467-9642-e18b25f422fd",
          "type": "webhook"
        }
      },
      "jobs": {
        "GRM15-Upsert-Belize-Grievances-in-Asana": {
          "id": "8b3b6bcd-31df-4f2d-9f36-647474aef913",
          "name": "GRM15 Upsert Belize Grievances in Asana",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n SubmissionType_Grievance: '1202329899911646',\n  SubmissionType_Suggestion: '1202329899911647',\n  SubmissionType_Request: '1202329899911648',\n  SubmissionType_Feedback: '1202329899911649',\n  WcsStaff_Yes: '1208262949429785',\n  WcsStaff_No: '1208262949429786',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  Anonymous_Anonymous: '1203977086782816',\n  Gender_Male: '1202330737362427',\n  Gender_Female: '1202330737362428',\n  'Gender_Mixed gender (group)': '1202330737362429',\n  'Gender_Unknown gender': '1202330737362430',\n  'Gender_Other gender': '1207852335266397',\n  'Gender_Prefer not to report': '1207852335266398',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  IndigenousPeople_mixed_group: '1207724962870243',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494'\n};\n\n  return { ...state, formatMapping };\n});\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.GrievanceID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'),\n      custom_fields: {\n                // Fields  belonging to open-ended questions (qxns that accept free text input)\n      '1203711959959076': dataValue('body.StaffName'),\n      '1203712049265363': dataValue('body.StaffEmail'),\n      '1208262949075450': dataValue('body.DateGrievanceReceived'),\n      '1203712064304976': dataValue('body.ReporterFullName'),\n      '1203712060006636': dataValue('body.ReporterContactInformation'),\n      '1201884379104074': dataValue('body.GrievanceID'),\n      '1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n      '1202329899911619': dataValue('body.WhereGrievance'),\n      '1208262949429777': dataValue('body.WhenGrievance'),\n      '1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n      '1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n      '1208262949429765': dataValue('body.Description'),\n      '1203712150593482': dataValue('body.HarmSuffered'),\n      '1203712149463009': dataValue('body.ReliefRequested'),\n      '1208262949075445': dataValue('body.OneDriveFolder'),\n      '1203830309880883': dataValue('body.WhatProject'),\n      '1208262949429770': dataValue('body.Suggestion'),\n\n// Fields  belonging to questions with dropdown or multiple choice\n      '1187328718760774': state => state.formatMapping[\"GrievanceStatus _\" + dataValue('body.GrievanceStatus ')(state)],\n      '1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],      '1202593715272940': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n      '1204269608862901': state => state.formatMapping[\"Classification_\" + dataValue('body.Classification')(state)],\n      '1208262949429784': state => state.formatMapping[\"WcsStaff_\" + dataValue('body.WcsStaff')(state)],\n      '1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n      '1203977086782815': state => state.formatMapping[\"Anonymous_\" + dataValue('body.Anonymous')(state)],\n      '1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n      '1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n      '1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n      '1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n      '1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n }\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        }
      },
      "edges": {
        "webhook->GRM15-Upsert-Belize-Grievances-in-Asana": {
          "enabled": true,
          "id": "ec430f4c-6f1b-459b-82d1-cd96769e80a6",
          "target_job_id": "8b3b6bcd-31df-4f2d-9f36-647474aef913",
          "source_trigger_id": "0cdddd79-5d1d-4467-9642-e18b25f422fd",
          "condition_type": "js_expression",
          "condition_label": "15. New Belize Form",
          "condition_expression": "state.data.formName == \"Belize Grievance Form\""
        }
      }
    },
    "PAT-Sync-Forms-to-Asana": {
      "id": "074e256e-62db-41dd-9f33-2dbd49ec64cc",
      "name": "PAT Sync Forms to Asana",
      "inserted_at": "2025-07-03T13:55:56.831911Z",
      "lock_version": 4,
      "triggers": {
        "webhook": {
          "enabled": false,
          "id": "12d40a86-61cc-4899-97d2-183b79cdcf50",
          "type": "webhook"
        }
      },
      "jobs": {
        "GRM14-Upsert-Argentina-Grievances-in-Asana": {
          "id": "07faeebc-f12b-4359-b270-ac31d28820c5",
          "name": "GRM14 Upsert Argentina Grievances in Asana",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n     SubmissionType_Grievance: '1202329899911646',\n     SubmissionType_Suggestion: '1202329899911647',\n     SubmissionType_Request: '1202329899911648',\n     SubmissionType_Feedback: '1202329899911649',\n     ReportFormat_InPerson: '1202330347493011',\n     ReportFormat_VoiceCall: '1202330347494027',\n     ReportFormat_TextMessage: '1202330347498273',\n     ReportFormat_Email: '1202330347502485',\n     ReportFormat_Letter: '1202330347503544',\n     ReportFormat_Other: '1203830536105154',\n     ReportFormat_SuggestionBox: '1202330347499327',\n     ReportFormat_Hotline: '1202330347501419',\n     ReportFormat_FocalPoint: '1207724960884497',\n     SubmissionContext_individual: '1202330732062943',\n     SubmissionContext_group: '1202330732067344',\n     SubmissionContext_passive_observation: '1202330732068565',\n     Gender_Male: '1202330737362427',\n     Gender_Female: '1202330737362428',\n     Gender_MixedGender: '1202330737362429',\n     Gender_UnknownGender: '1202330737362430',\n     Gender_OtherGender: '1207852335266397',\n     Gender_UnknownGender: '1207852335266398',\n     IndigenousPeople_Yes_ips: '1202330755980982',\n     IndigenousPeople_No_ips: '1202330755984093',\n     IndigenousPeople_unknown_ips: '1202330755985164',\n     IndigenousPeople_mixed_group: '1207724962870243',\n    'Age_<18': '1202330714895607',\n    'Age_19-35': '1202330714895608',\n    'Age_36-50': '1202330714895609',\n    'Age_>50': '1202330714895610',\n     Age_mixed_age: '1202330714895611',\n     Age_unknown_age: '1202330714895612',\n     GrievanceAgainst_Wcs: '1202330466059593',\n     GrievanceAgainst_GovernmentPartner: '1202330466059594',\n     GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n     GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n     GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n     DatePrecision_Yes: '1202330815421248',\n     DatePrecision_No: '1202330815421249',\n     ConfidentialitySensitivity_Yes: '1202330821410493',\n     ConfidentialitySensitivity_No: '1202330821410494'\n};\n\n  return { ...state, formatMapping };\n});\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.CaseID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'),\n      custom_fields: {\n                // Fields  belonging to open-ended questions (qxns that accept free text input)\n      '1202329899911595': dataValue('body.CaseID'),\n      '1203711959959076': dataValue('body.StaffName'),\n      '1203712049265363': dataValue('body.StaffEmail'),\n      '1202329899911599': dataValue('body.SubmissionDate'),\n      '1207853044688980': dataValue('body.DepositDate'),\n      '1207853044688986': dataValue('body.SuggestionBoxGps'),\n      '1207853044688992': dataValue('body.SuggestionBoxId'),\n      '1207853044726596': dataValue('body.BoxCollectionDate'),\n      '1202329899911605': dataValue('body.ReporterName'),\n      '1203712060006636': dataValue('body.ReporterContactInformation'),\n      '1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n      '1202329899911619': dataValue('body.WhereGrievance'),\n      '1202329899911623': dataValue('body.GrievanceDate'),\n      '1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n      '1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n      '1203712150593482': dataValue('body.HarmSuffered'),\n      '1203712149463009': dataValue('body.ReliefRequested'),\n      '1202329899911635': dataValue('body.OnlineFolder'),\n      '1207853044764227': dataValue('body.Location'),\n\n// Fields  belonging to questions with dropdown or multiple choice\n      '1201123975239655': state => state.formatMapping[\"Funding/Grants_\" + dataValue('body.Funding/Grants')(state)],\n      '1202593715272940': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n      '1204269608862901': state => state.formatMapping[\"Classification_\" + dataValue('body.Classification')(state)],\n      '1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n      '1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n      '1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n      '1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n      '1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n      '1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n      '1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n      '1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n      '1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n }\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        }
      },
      "edges": {
        "webhook->GRM14-Upsert-Argentina-Grievances-in-Asana": {
          "enabled": true,
          "id": "a5fad937-2353-4ade-861f-1b542365e852",
          "target_job_id": "07faeebc-f12b-4359-b270-ac31d28820c5",
          "source_trigger_id": "12d40a86-61cc-4899-97d2-183b79cdcf50",
          "condition_type": "js_expression",
          "condition_label": "14. New Argentina GRM form",
          "condition_expression": "state.data.formName == \"Mecanismo de atención de Quejas, Reclamos y Sugerencias\""
        }
      }
    },
    "SAB-2.-Update-Asana-Task-Aceh": {
      "id": "76032ad6-6dae-45d4-9a6f-60dc96f4db82",
      "name": "SAB 2. Update Asana Task Aceh",
      "inserted_at": "2025-07-03T13:56:43.568269Z",
      "lock_version": 4,
      "triggers": {
        "webhook": {
          "enabled": false,
          "id": "491ac9b8-8492-43f1-a215-3ce4efa6be03",
          "type": "webhook"
        }
      },
      "jobs": {
        "GRM02-c-Update-Asana-Task-Aceh": {
          "id": "4ac090f4-41e7-43f0-8462-f3cf71b214d6",
          "name": "GRM02 c Update Asana Task Aceh",
          "body": "fn(state => {\n  state.grievanceReportFormatMap = {\n    'Verbal/Langsung': '1192836094355011', //InPerson\n    Telepon: '1192836094355012', // PhoneCall\n    Email: '1192847692376214', //Email\n    Sarut: '1192847692376223', //PostalLetter\n    'Kotak Saran': '1207122874564877', //SuggestionBox\n    'Pesan Teks': '1192847692374160', //TextMessage\n    'Pengiriman Langsung': '1207001942658468', //DirectSubmission\n  };\n\n  state.newOrContinuedMap = {\n    Baru: '1207116211136433', //New\n    Lanjutan: '1207116218726092', // Continued\n  };\n\n  state.stakeholderMap = {\n    WCS: '1207122053764074',\n    DKP: '1207122053764075',\n    'BKSDA/Taman Nasional': '1207122053764076',\n    Lainnya: '1207122053764077'\n  };\n\n  state.evidenceMap = {\n    Ada: \"1207502226530960\",\n    \"Tidak Ada\": \"1207502226530961\"\n  }\n\n  state.gradeMap = {\n    0: '1202593715272941',\n    1: '1202593715272942',\n    2: '1202593715272943',\n    3: '1202593715272944',\n    4: '1202593715272945',\n    5: '1202593715272946',\n  };\n\n  state.statusMap = {\n    BeingReviewed: '1192850232576003',\n    NotAssigned: '1187328718760775',\n    Dismissed: '1187674280676653',\n    OnHold: '1187328718760778',\n    BeingInvestigated: '1187328718760776',\n    // Resolved: '1187328718760774',\n    Resolved: '1187328718760777',\n    RemediationBeingMonitored: '1192772373678248',\n    InResolution: '1208167139436055',\n    'Transferred to Human Resources': '1206081287831891'\n  };\n\n  state.categoryComplainantMap = {\n    PAP: '1207001974192804', //PAP\n    'CSO/LSM': '1207001974192805', //CSOS/NGO\n    'Lembaga Pemerintah': '1207001974192806', //Government,\n    'Masyarakat Lokal (bukan PAP)': '1207001974192807', //LocalCommunities\n    Lainnya: '1207001974192808', //OtherCategory\n  };\n  \n  state.followupMap = {\n    'Ya WCS': '1201884189073507', \n    'Ya Non-WCS': '1201884189073508', \n    Tidak: '1207122053764079'\n  };\n\n  return state;\n});\n\nfn(state => {\n  const { headers } = state.data;\n  const taskIds = Object.keys(state.data).filter(\n    i =>\n      i !== 'headers' &&\n      i !== '' &&\n      i !== '__query_params' &&\n      /^[0-9]+$/.test(i) // returns only numeric ids\n  );\n  \n  console.log(taskIds);\n\n  state.data = taskIds\n    .map(taskId => {\n      const mappedObject = headers.reduce((obj, key, index) => {\n        obj[key] = state.data[taskId].values[index];\n        return obj;\n      }, {});\n      return { id: taskId, task: mappedObject };\n    })\n    .flat();\n  console.log(state.data);\n\n  return state;\n});\n\nfn(state => {\n  const {\n    categoryComplainantMap,\n    grievanceReportFormatMap,\n    statusMap,\n    newOrContinuedMap,\n    gradeMap,\n    stakeholderMap,\n    evidenceMap,\n    followupMap\n  } = state;\n  state.tasks = state.data.map(({ id, task }) => {\n    console.log(id + \" \" , task['Tgl Tindak Lanjut Keluhan oleh tim ']);\n    console.log(task['Grade']);\n    console.log(gradeMap[task['Grade']]);\n    console.log(task['Perlu/Tidak Tindak Lanjut (Ya WCS / Ya Non WCS / Tidak)']);\n    console.log(followupMap[task['Perlu/Tidak Tindak Lanjut (Ya WCS / Ya Non WCS / Tidak)']]);\n    \n    return {\n      id,\n      task: {\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n\n        custom_fields: {\n          //This tells Asana what fields to update and how to locate them.\n          //The statements below apply to Asana Fields that are for OPEN ENDED\n          //i.e. They accept FREE TEXT INPUT from the Kobo Form\n\n          1207001974192803:\n            categoryComplainantMap[task['Kategori Pemberi Keluhan']], //Mapped to CategoryComplainant in Asana\n\n          1201884189073518: task['Topik / Tema Keluhan'], //Mapped to Topic in Asana\n          1207122053764073:\n            stakeholderMap[task['Stakeholder yang Bertanggung Jawab Terhadap Keluhan']], //Mapped to Stakeholders Responsible in Asana\n          1207502226530959: evidenceMap[task['Bukti Pendukung Keluhan']], //Mapped to Grievance Evidence in Asana\n          1207116211136432:\n            newOrContinuedMap[task['Keluhan baru atau lanjutan']],\n          1201884189073512: task['Tgl Tindak Lanjut Keluhan oleh tim '],\n\n          1201884189073496: task['Nama Proyek/Donor'],\n          1207116218726094: task['Terjemahan atau penjelasan tambahan'],\n          1202593715272940: gradeMap[task['Grade']],\n          1201884189073506: followupMap[task['Perlu/Tidak Tindak Lanjut (Ya WCS / Ya Non WCS / Tidak)']],\n          // 1201884189073506: task['Perlu/Tidak Tindak Lanjut  (WCS)'],\n          1201884189073516: task['Penyelesaian Keluhan'],\n          1201884189073514: task['Tgl Pemberian Tanggapan keluhan'],\n          1187328718760774: statusMap[task['Status Keluhan']],\n          1207122053764071: task['Program'],\n        },\n      },\n    };\n  });\n\n  if (state.tasks === 0) {\n    console.log('no new data to sync to Asana');\n  }\n\n  state.allResults = [];\n  return state;\n});\n\neach(\n  '$.tasks[*]',\n  updateTask(\n    state => state.data.id,\n    state => state.data.task,\n    state => {\n      state.allResults.push(state.data);\n      return state;\n    }\n  )\n);\n\nfn(state => {\n  const ids = state.allResults.map(res => res.gid);\n  if (state.allResults.length > 0) {\n    console.log(\n      `${state.allResults.length} number of tasks to be updated with the following Asana task ids`\n    );\n    console.log(JSON.stringify(ids, null, 2));\n  }\n  return state;\n});\n",
          "adaptor": "@openfn/language-asana@v3.2.0",
          "project_credential_id": null
        }
      },
      "edges": {
        "webhook->GRM02-c-Update-Asana-Task-Aceh": {
          "enabled": true,
          "id": "0dd18712-14b1-4b46-84e9-0847502dfe70",
          "target_job_id": "4ac090f4-41e7-43f0-8462-f3cf71b214d6",
          "source_trigger_id": "491ac9b8-8492-43f1-a215-3ce4efa6be03",
          "condition_type": "js_expression",
          "condition_label": "Changes from GoogleSheet",
          "condition_expression": "state.data.notificationType == \"gsheet-changes\""
        }
      }
    },
    "SUS-Sync-Forms-to-Asana": {
      "id": "4f9fd6fb-8b25-4af1-8ced-bf4bb971ce71",
      "name": "SUS Sync Forms to Asana",
      "inserted_at": "2025-07-03T13:57:03.352062Z",
      "lock_version": 5,
      "triggers": {
        "webhook": {
          "enabled": false,
          "id": "06029130-402b-40d0-8562-d1f7ddc38d9c",
          "type": "webhook"
        }
      },
      "jobs": {
        "Triage-jobs": {
          "id": "186d6307-83b5-4061-809c-996d41379b91",
          "name": "Triage jobs",
          "body": "// Check out the Job Writing Guide for help getting started:\n// https://docs.openfn.org/documentation/jobs/job-writing-guide\n",
          "adaptor": "@openfn/language-common@2.5.0",
          "project_credential_id": null
        },
        "GRM18-Upsert-CAR-Grievances-in-Asana": {
          "id": "2d0a8b11-e31b-4e7d-8006-a94f87223620",
          "name": "GRM18 Upsert CAR Grievances in Asana",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  SubmissionType_Grievance: '1202329899911646',\n  SubmissionType_Suggestion: '1202329899911647',\n  SubmissionType_Request: '1202329899911648',\n  SubmissionType_Feedback: '1202329899911649',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_Prospecting: '1208419056473280',\n  SubmissionContext_individual: '1202330732062943',\n  SubmissionContext_group: '1202330732067344',\n  SubmissionContext_passive_observation: '1202330732068565',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  IndigenousPeople_mixed_group: '1207724962870243',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  DatePrecision_Yes: '1202330815421248',\n  DatePrecision_No: '1202330815421249',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.CaseID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'),\n      custom_fields: {\n        // Fields  belonging to open-ended questions (qxns that accept free text input)\n\n'1202329899911599': dataValue('body.today'), // The Kobo value \"today\" is used to fill the \"Submission Date\" in Asana\n'1204411543329531': dataValue('body.SubmissionDate'), // the kobo value \"SubmissionDate\" is used to fill the \"Deposit date\" in Asana\n'1202329899911595': dataValue('body.CaseID'),\n'1203711959959076': dataValue('body.StaffName'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1208391214272950': dataValue('body.SuggestionBoxId'),\n'1204398351814002': dataValue('body.SuggestionBoxGps'),\n'1204398351814004': dataValue('body.BoxCollectionDate'),\n'1202329899911605': dataValue('body.ReporterName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1208391214272934': dataValue('body.Precision sur le lieu'),\n'1202329899911623': dataValue('body.GrievanceDate'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1202329899911635': dataValue('body.OnlineFolder'),\n        \n        // Fields  belonging to questions with dropdown or multiple choice\n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n'1207470695842882': state => state.formatMapping[\"Donor_\" + dataValue('body.Donor')(state)],\n      },\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM22-Upsert-Sena-Oura-Grievances": {
          "id": "55ff5f37-1cfa-4cc0-80ac-38ccc84de47d",
          "name": "GRM22 Upsert Sena Oura Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  SubmissionType_Grievance: '1202329899911646',\n  SubmissionType_Suggestion: '1202329899911647',\n  SubmissionType_Request: '1202329899911648',\n  SubmissionType_Feedback: '1202329899911649',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_Prospecting: '1208419056473280',\n  SubmissionContext_individual: '1202330732062943',\n  SubmissionContext_group: '1202330732067344',\n  SubmissionContext_passive_observation: '1202330732068565',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  IndigenousPeople_mixed_group: '1207724962870243',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  TranshumantHerders_Yes: '1210234880733066',\n  TranshumantHerders_No: '1210234880733067',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  DatePrecision_Yes: '1202330815421248',\n  DatePrecision_No: '1202330815421249',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494',\n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.CaseID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.Description'),\n      custom_fields: {\n        // Fields  belonging to open-ended questions (qxns that accept free text input)\n\n'1202329899911595': dataValue('body.CaseID'),\n'1203711959959076': dataValue('body.StaffName'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1202329899911599': dataValue('body.today'), // The Kobo value \"today\" is used to fill the \"Submission Date\" in Asana\n'1204411543329531': dataValue('body.DepositDate'),\n'1209801117509185': dataValue('body.SuggestionBoxId'),\n'1204398351814002': dataValue('body.SuggestionBoxGps'),\n'1204398351814004': dataValue('body.BoxCollectionDate'),\n'1202329899911605': dataValue('body.ReporterName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1202329899911623': dataValue('body.GrievanceDate'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1202329899911635': dataValue('body.OnlineFolder'),\n        \n        // Fields  belonging to questions with dropdown or multiple choice\n'1202329899911645': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n'1210234880733065': state => state.formatMapping[\"TranshumantHerders_\" + dataValue('body.TranshumantHerders')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n      },\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        }
      },
      "edges": {
        "webhook->Triage-jobs": {
          "enabled": true,
          "id": "15fb1d76-09cd-426c-859e-2f26e45c3bc2",
          "target_job_id": "186d6307-83b5-4061-809c-996d41379b91",
          "source_trigger_id": "06029130-402b-40d0-8562-d1f7ddc38d9c",
          "condition_type": "always"
        },
        "Triage-jobs->GRM18-Upsert-CAR-Grievances-in-Asana": {
          "enabled": true,
          "id": "dce4c7f8-94b3-4431-863e-304ee52256da",
          "target_job_id": "2d0a8b11-e31b-4e7d-8006-a94f87223620",
          "source_job_id": "186d6307-83b5-4061-809c-996d41379b91",
          "condition_type": "js_expression",
          "condition_label": "New CAR form",
          "condition_expression": "state.data.formName == \"GRM CAR\""
        },
        "Triage-jobs->GRM22-Upsert-Sena-Oura-Grievances": {
          "enabled": true,
          "id": "ab34c075-81bd-418c-8e43-eee0a687d963",
          "target_job_id": "55ff5f37-1cfa-4cc0-80ac-38ccc84de47d",
          "source_job_id": "186d6307-83b5-4061-809c-996d41379b91",
          "condition_type": "js_expression",
          "condition_label": "New Sera Oura Form",
          "condition_expression": "state.data.formName == \"GRM Sena Oura\""
        }
      }
    },
    "GLO-Sync-Forms-to-Asana": {
      "id": "0b3179e7-50f9-4ce0-9406-eb71947565da",
      "name": "GLO Sync Forms to Asana",
      "inserted_at": "2025-07-03T14:13:41.629939Z",
      "lock_version": 19,
      "triggers": {
        "webhook": {
          "enabled": false,
          "id": "2b8d8b32-928a-40bb-895e-bb11c2660e41",
          "type": "webhook"
        }
      },
      "jobs": {
        "Triage-jobs": {
          "id": "d0e9729a-a288-4ab6-86de-bec6647498a4",
          "name": "Triage jobs",
          "body": "// Check out the Job Writing Guide for help getting started:\n// https://docs.openfn.org/documentation/jobs/job-writing-guide\n",
          "adaptor": "@openfn/language-common@latest",
          "project_credential_id": null
        },
        "GRM00-Upsert-TEST-Grievances": {
          "id": "44fb1e36-6c77-4d3a-894a-f00f6f1d909a",
          "name": "GRM00 Upsert TEST Grievances",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n \n  SubmissionType_Grievance: '1208823831241793',\n  SubmissionType_Suggestion: '1208823831314328',\n  'SubmissionType_Test case': '1208823831314329',\n  SubmissionType_Question: '1208823831314330',\n  Classification_Boundary: '1207934444664901',\n  Classification_Comment: '1207064126306000',\n  'Classification_Human Resources': '1206208252500541',\n  'Classification_HWC (Human-Wildlife Conflict)': '1204269608862904',\n  'Classification_Illegal Activity': '1204269617420858',\n  'Classification_Management ': '1204269617420857',\n  'Classification_PI & NR (Project Implementation & Natural Resource Management)': '1204269608862903',\n  'Classification_Positive Feedback': '1204269617420859',\n  Classification_Question: '1207064126305999',\n  'Classification_Request for assistance': '1204269617420968',\n  'Classification_Safeguards & Human Rights': '1204269608862902',\n  Classification_Suggestion: '1207064073157821',\n  Classification_Other: '1204269617420860',\n  'Classification_Not eligible': '1207724727681221',\n  Country_Bolivia: '1208823831314340',\n  Country_Brazil: '1208823831314341',\n  Country_Colombia: '1208823831314342',\n  Country_Ecuador: '1208823831314343',\n  Country_Peru: '1208823831314344',\n  Country_Indeterminado: '1208823831314345',\n  Donor_AFD: '1207470695842883',\n  Donor_BAF: '1207470914898964',\n  Donor_BEF: '1207470928895774',\n  Donor_EU: '1207470928895775',\n  Donor_GEF: '1207470928895776',\n  Donor_Hempel: '1207942941061344',\n  Donor_INL: '1207470928895777',\n  Donor_KFW: '1207942941061345',\n  Donor_LLF: '1207470928895778',\n  Donor_NOAA: '1207470928895779',\n  Donor_MACP: '1207470928895780',\n  'Donor_REDD+': '1207470928895781',\n  Donor_USAID: '1207470928895782',\n  'Donor_World Bank': '1207551210258645',\n  WcsStaff_Yes: '1208823831341595',\n  WcsStaff_No: '1208823831341596',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_FocalPoint: '1207724960884497',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_Hotline: '1202330347501419',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_Letter: '1202330347503544',\n  ReportFormat_OnlineForm: '1207934414764297',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_Prospecting: '1208419056473280',\n  Anonymous_Yes: '1203977086782816',\n  Anonymous_No: '1208270620741491',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  'Gender_mixed_gender': '1202330737362429',\n  'Gender_unknown_gender': '1202330737362430',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  IndigenousPeople_mixed_group: '1207724962870243',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494'\n};\n\n  return { ...state, formatMapping };\n});\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.GrievanceID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptioGrievance'),\n      custom_fields: {\n                // Fields  belonging to open-ended questions (qxns that accept free text input)\n'1203711959959076': dataValue('body.StaffName'),\n'1203712049265363': dataValue('body.StaffEmail'),\n'1208823831241787': dataValue('body.Submission Date'),\n'1203712064304976': dataValue('body.ReporterFullName'),\n'1203712060006636': dataValue('body.ReporterContactInformation'),\n'1201884379104074': dataValue('body.GrievanceId'),\n'1203712112458773': dataValue('body.AuthorityGrievanceReporter'),\n'1202329899911619': dataValue('body.WhereGrievance'),\n'1208823831341587': dataValue('body.WhenGrievance'),\n'1203712125372990': dataValue('body.PartiesInvolvedGrievance'),\n'1203712145400954': dataValue('body.LocalAuthoritiesContacted'),\n'1208823831341575': dataValue('body.DescriptioGrievance'),\n'1203712150593482': dataValue('body.HarmSuffered'),\n'1203712149463009': dataValue('body.ReliefRequested'),\n'1208823831241782': dataValue('body.OneDrive Folder'),\n'1203830309880883': dataValue('body.WhatProject'),\n'1208823831341580': dataValue('body.Suggestion'),\n\n// Fields  belonging to questions with dropdown or multiple choice\n'1187328718760774': state => state.formatMapping[\"GrievanceStatus _\" + dataValue('body.GrievanceStatus ')(state)],\n'1208823831241792': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n'1202593715272940': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n'1204269608862901': state => state.formatMapping[\"Classification_\" + dataValue('body.Classification')(state)],\n'1208823831314339': state => state.formatMapping[\"Country_\" + dataValue('body.Country')(state)],\n'1207470695842882': state => state.formatMapping[\"Donor_\" + dataValue('body.Donor')(state)],\n'1208823831341594': state => state.formatMapping[\"WcsStaff_\" + dataValue('body.WcsStaff')(state)],\n'1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n'1203977086782815': state => state.formatMapping[\"Anonymous_\" + dataValue('body.Anonymous')(state)],\n'1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n'1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n'1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n'1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n'1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n }\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM01-Upsert-WCS-Global-Grievances-in-Asana": {
          "id": "6cb7b710-d0da-475b-8165-a503e29b8c3c",
          "name": "GRM01 Upsert WCS Global Grievances in Asana",
          "body": "// Check out the Job Writing Guide for help getting started:\n// https://docs.openfn.org/documentation/jobs/job-writing-guide\n",
          "adaptor": "@openfn/language-asana@2.1.6",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "TEST-Asana-Update": {
          "id": "8f8d8235-9970-4745-8632-ce32df4c2ba2",
          "name": "TEST Asana Update",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n  'Grade_Grade 0': '1203958686294707',\n  'Grade_Grade 1': '1203958686294708',\n  'Grade_Grade 2': '1203958686294709',\n  'Grade_Grade 3': '1203958686294710',\n  'Grade_Grade 4': '1203958686294711',\n  'Grade_Grade 5': '1203958686294712',\n  SubmissionType_Grievance: '1203958690339474',\n  SubmissionType_Suggestion: '1203958690339475',\n  SubmissionType_Request: '1203958690339476',\n  SubmissionType_Feedback: '1203958690339477',\n  ReportFormat_InPerson: '1202330347493011',\n  ReportFormat_VoiceCall: '1202330347494027',\n  ReportFormat_TextMessage: '1202330347498273',\n  ReportFormat_Email: '1202330347502485',\n  ReportFormat_PostalLetter: '1202330347503544',\n  ReportFormat_Other: '1203830536105154',\n  ReportFormat_SuggestionBox: '1202330347499327',\n  ReportFormat_Hotline: '1202330347501419',\n  SubmissionContext_individual: '1202330732062943',\n  SubmissionContext_group: '1202330732067344',\n  SubmissionContext_passive_observation: '1202330732068565',\n  Gender_male: '1202330737362427',\n  Gender_female: '1202330737362428',\n  Gender_mixed_gender: '1202330737362429',\n  Gender_unknown_gender: '1202330737362430',\n  IndigenousPeople_Yes_ips: '1202330755980982',\n  IndigenousPeople_No_ips: '1202330755984093',\n  IndigenousPeople_unknown_ips: '1202330755985164',\n  'Age_<18': '1202330714895607',\n  'Age_19-35': '1202330714895608',\n  'Age_36-50': '1202330714895609',\n  'Age_>50': '1202330714895610',\n  Age_mixed_age: '1202330714895611',\n  Age_unknown_age: '1202330714895612',\n  GrievanceAgainst_Wcs: '1202330466059593',\n  GrievanceAgainst_GovernmentPartner: '1202330466059594',\n  GrievanceAgainst_PrivateSectorPartner: '1202330466059595',\n  GrievanceAgainst_CivilSocietyPartner: '1202330466059596',\n  GrievanceAgainst_NotWcsAndNotAWcsPartner: '1202330466059597',\n  DatePrecision_Yes: '1202330815421248',\n  DatePrecision_No: '1202330815421249',\n  ConfidentialitySensitivity_Yes: '1202330821410493',\n  ConfidentialitySensitivity_No: '1202330821410494'\n  };\n\n  return { ...state, formatMapping };\n});\n\n\n// console.log(\"projectid:\");\n// console.log(dataValue('projectid')(state));\nfn(state =>\nupsertTask(\n    dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1202329899911590', //hardcoded project id\n  \n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.GrievanceID')(state)}`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: dataValue('body.DescriptioGrievance'),\n      custom_fields: {\n       // Fields  belonging to open-ended questions (qxns that accept free text input)\n      // '1203958690339485': dataValue('body.StaffName'),\n      // '1203958690339489': dataValue('body.CaseID'),\n      // '1203958690339493': dataValue('body.StaffEmail'),\n      // '1203958690339497': dataValue('body.today'), // The Today value in Kobo goes into Submission Date in Asana\n      // '1203958690356245': dataValue('body.ReporterName'),\n      // '1203958690356249': dataValue('body.ReporterContactInformation'),\n      // '1203958690356256': dataValue('body.AuthorityGrievanceReporter'),\n      // '1203958690356261': dataValue('body.WhereGrievance'),\n      // '1203958690356266': dataValue('body.GrievanceDate'),\n      // '1203958690356270': dataValue('body.PartiesInvolvedGrievance'),\n      // '1203958690356274': dataValue('body.LocalAuthoritiesContacted'),\n      // '1203958690374468': dataValue('body.HarmSuffered'),\n      // '1203958690374472': dataValue('body.ReliefRequested'),\n      // '1203958690374476': dataValue('body.OnlineFolder'),\n      // '1203958690374480': dataValue('body.Location'),\n      // '1205016004799740': dataValue('body.SuggestionBoxId'),\n      // '1204411543329531': dataValue('body.SubmissionDate'), // The Submission Date in Kobo goes to the Deposit Date in Asana\n      // '1204398351814004': dataValue('body.BoxCollectionDate'),\n      // '1204398351814002': dataValue('body.SuggestionBoxGps'),\n\n      // // Fields  belonging to questions with dropdown or multiple choice\n      // '1203958686294706': state => state.formatMapping[\"Grade_\" + dataValue('body.Grade')(state)],\n      // '1203958690339473': state => state.formatMapping[\"SubmissionType_\" + dataValue('body.SubmissionType')(state)],\n      // '1202330347491974': state => state.formatMapping[\"ReportFormat_\" + dataValue('body.ReportFormat')(state)],\n      // '1202330732061901': state => state.formatMapping[\"SubmissionContext_\" + dataValue('body.SubmissionContext')(state)],\n      // '1202330737362426': state => state.formatMapping[\"Gender_\" + dataValue('body.Gender')(state)],\n      // '1202330755979944': state => state.formatMapping[\"IndigenousPeople_\" + dataValue('body.IndigenousPeople')(state)],\n      // '1202330714895606': state => state.formatMapping[\"Age_\" + dataValue('body.Age')(state)],\n      // '1202330466059592': state => state.formatMapping[\"GrievanceAgainst_\" + dataValue('body.GrievanceAgainst')(state)],\n      // '1202330815421247': state => state.formatMapping[\"DatePrecision_\" + dataValue('body.DatePrecision')(state)],\n      // '1202330821410492': state => state.formatMapping[\"ConfidentialitySensitivity_\" + dataValue('body.ConfidentialitySensitivity')(state)],\n    },\n  },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n)(state)\n.catch(e => {\n  console.log('Asana says', JSON.stringify(e.response.data, null, 2));\n  throw e;\n})\n)\n",
          "adaptor": "@openfn/language-asana@4.1.1",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        }
      },
      "edges": {
        "webhook->Triage-jobs": {
          "enabled": true,
          "id": "39b25ede-73b9-42c6-8139-f407dc9cbc2e",
          "target_job_id": "d0e9729a-a288-4ab6-86de-bec6647498a4",
          "source_trigger_id": "2b8d8b32-928a-40bb-895e-bb11c2660e41",
          "condition_type": "always"
        },
        "Triage-jobs->GRM00-Upsert-TEST-Grievances": {
          "enabled": false,
          "id": "02632ad9-0ed9-45b0-88ca-f3855c26af12",
          "target_job_id": "44fb1e36-6c77-4d3a-894a-f00f6f1d909a",
          "source_job_id": "d0e9729a-a288-4ab6-86de-bec6647498a4",
          "condition_type": "js_expression",
          "condition_label": "New TEST form",
          "condition_expression": "state.data.formName == \"Test WCS FGRM Form\""
        },
        "Triage-jobs->GRM01-Upsert-WCS-Global-Grievances-in-Asana": {
          "enabled": false,
          "id": "7b0c9432-2747-4d6e-876b-e19d3f752039",
          "target_job_id": "6cb7b710-d0da-475b-8165-a503e29b8c3c",
          "source_job_id": "d0e9729a-a288-4ab6-86de-bec6647498a4",
          "condition_type": "js_expression",
          "condition_label": "New WCS Global GRM form",
          "condition_expression": "state.data.formName == \"WCS Global Grievances & Suggestions\""
        },
        "Triage-jobs->TEST-Asana-Update": {
          "enabled": true,
          "id": "c480b936-6e0d-4fa8-8d89-54feb4b9f6d3",
          "target_job_id": "8f8d8235-9970-4745-8632-ce32df4c2ba2",
          "source_job_id": "d0e9729a-a288-4ab6-86de-bec6647498a4",
          "condition_type": "js_expression",
          "condition_label": "TEST WCS FORM",
          "condition_expression": "state.data.formName == \"Test WCS FGRM Form\""
        }
      }
    },
    "SAB-1.-Sync-Forms-to-Asana": {
      "id": "9e943178-492e-4143-bc04-b7fa804f3029",
      "name": "SAB 1. Sync Forms to Asana",
      "inserted_at": "2025-07-03T14:14:33.412007Z",
      "lock_version": 14,
      "triggers": {
        "webhook": {
          "enabled": false,
          "id": "bb70d6ab-4d28-4e04-8eb6-e91b1293a9a7",
          "type": "webhook"
        }
      },
      "jobs": {
        "Triage-jobs": {
          "id": "391a6b4f-289f-4409-853f-8dfa5966322b",
          "name": "Triage jobs",
          "body": "// Check out the Job Writing Guide for help getting started:\n// https://docs.openfn.org/documentation/jobs/job-writing-guide\n",
          "adaptor": "@openfn/language-common@2.5.0",
          "project_credential_id": null
        },
        "GRM02-a-Upsert-Aceh-Grievances-in-Asana": {
          "id": "487e3c2f-7d17-446f-8fce-997c28c9cc19",
          "name": "GRM02 a Upsert Aceh Grievances in Asana",
          "body": "// Your job goes here.\n\nfn(state => {\n  //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n    RelatedProjects: '1187634487549316',\n    LandTerritory: '1187634487549317',\n    WildlifeConflict: '1187634487549318',\n    OtherIssues: '1201884389902967',\n    Suggestion: '1201884389905045',\n    InPerson: '1192836094355011',\n    VoiceCall: '1192836094355012',\n    TextMessage: '1192847692374160',\n    Email: '1192847692376214',\n    PostalLetter: '1192847692376223',\n    Yes: '1201884189073507',\n    No: '1201884189073508',\n    BeingReviewed: '1192850232576003',\n    NotAssigned: '1187328718760775',\n    Dismissed: '1187674280676653',\n    OnHold: '1187328718760778',\n    BeingInvestigated: '1187328718760776',\n    Resolved: '1187328718760774',\n    RemediationBeingMonitored: '1192772373678248',\n    InResolution: '1208167139436055',\n    TransferredToHumanResources: '1206081287831891',\n    NotExisting: '1207502226530961',\n    Existing: '1207502226530960',\n    PAP: '1207001974192804',\n    'CSOS/NGO': '1207001974192805',\n    Government: '1207001974192806',\n    LocalCommunities: '1207001974192807',\n    OtherCategory: '1207001974192808',\n    WCS: '1207122053764074',\n    DKP: '1207122053764075',\n    'BKSDA/National Park': '1207122053764076',\n    Others: '1207122053764077',\n    New: '1207116211136433',\n    Continued: '1207116218726092',\n    0: '1202593715272941',\n    1: '1202593715272942',\n    2: '1202593715272943',\n    3: '1202593715272944',\n    4: '1202593715272945',\n    5: '1202593715272946'\n\n  };\n  const koboFormData = state.data.body;\n  return { ...state, formatMapping, koboFormData };\n});\n\nupsertTask(\n  dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1201382240883590', //hardcoded project id\n\n  {\n    externalId: 'name', // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n        `${dataValue('body.GrievanceId')(state)} (KoboID:${dataValue(\n          'body._id'\n        )(state)})`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: state => ``,\n      \n      custom_fields: {\n\n        //This tells Asana what fields to update and how to locate them.\n\n        //The statements below apply to Asana Fields that are for OPEN ENDED\n        //i.e. They accept FREE TEXT INPUT from the Kobo Form\n        // '1206280786508633': dataValue('body.PicGrievanceReceiver'), // TODO @ Aissa\n        1201884379104074: dataValue('body.GrievanceId'), //Mapped to Grievance ID in Asana\n        1201872034756835: dataValue('body.GrievanceDate'), //Mapped to Grievance Date in Asana\n        1202329899911619: dataValue('body.GrievanceLocation'), //Mapped to Grievance Location in Asana\n        1201872034752530: dataValue('body.NameComplainant'), //Mapped to Name of Complainant in Asana\n        1201884189073488: dataValue('body.AddressComplainant'), //Mapped to Address of Complainant in Asana\n        1201884189073490: dataValue('body.TelephoneComplainant'), //Mapped to TelephoneComplainant in Asana\n        \n        1201884189073518: dataValue('body.Topic'), //Mapped to Topic in Asana\n        1201884189073504: dataValue('body.GrievanceDescription'), //Mapped to Grievance Description in Asana\n        \n\n        1201884189073512: dataValue('body.FollowUpDate'), //Mapped to Follow Up Date in Asana\n        1201884189073516: dataValue('body.GrievanceResolution'), //Mapped to Grievance Resolution in Asana\n        1201884189073514: dataValue('body.DateGrievanceResolution'), //Mapped to Date Grievance Resolution in Asana (**Check Asana)\n        1207001974192810: dataValue('body.NameRecorder'),\n        1207001974192812: dataValue('body.OrganizationRecorder'),\n        1207116218726094: dataValue('body.Translation'),\n        1207122053764071: dataValue('body.Program'),\n\n        \n  \n        //The statements below apply to Asana Fields that have multiplechoice / DropDown options\n        //i.e. They require that the user selects specific options from the Kobo Form dropdown list.\n        // These are the questions that require the MAPPING TABLES at the top of this page.\n        //The mapping key-value pairs are obtained using a console.log tht runs in the Fetch GID Job\n        /* '0000000000000000': dataValue('body.WhereGrievance'), */ //Grievance Date field missing in Asana\n        1187634487549315: state =>\n\n          state.formatMapping[dataValue('body.GrievanceType')(state)],\n        1192836094355010: state =>\n          state.formatMapping[dataValue('body.GrievanceReportFormat')(state)], //Mapped to Grievance Report Format in Asana (**Check Asana)\n        1201884189073506: state =>\n          state.formatMapping[dataValue('body.NeedFollowUp')(state)],\n        1187328718760774: state =>\n          state.formatMapping[dataValue('body.GrievanceStatus')(state)],\n\n        1207502226530959: state => state.formatMapping[dataValue('body.GrievanceEvidence')(state)], //Mapped to Grievance Evidence in Asana\n        1207001974192803: state => state.formatMapping[dataValue('body.CategoryComplainant')(state)],\n        1207122053764073: state => state.formatMapping[dataValue('body.StakeholdersResponsible')(state)],\n        1207116211136432: state => state.formatMapping[dataValue('body.NewOrContinued')(state)],\n        1202593715272940: state => state.formatMapping[dataValue('body.Grade')(state)],\n        \n        \n        // '1201884189073492': dataValue('body.NoFormPreviousComplaint'),// TODO @ Aissa //Mapped to No Form Previous Complaint in Asana\n\n        // '1201884189073494': dataValue('body.ProjectName'),  // TODO @ Aissa //Mapped to ProjectName in Asana\n        // '1201884189073510': dataValue('body.FollowUpOtherStakeholders'), // TODO @ Aissa //Mapped to Follow Up Other Stakeholders in Asana\n      },\n    },\n  },\n  state => {\n    console.log('final state:: ', state); //log data\n    return state;\n  }\n);\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM02-b-Sync-to-GoogleSheets-Aceh": {
          "id": "8cdb3784-3a4b-423f-8a1d-235c459e53c8",
          "name": "GRM02 b Sync to GoogleSheets Aceh",
          "body": "fn((state) => {\n  const formatGlobals = {\n    InPerson: \"Verbal/Langsung\",\n    PhoneCall: \"Telepon\",\n    Email: \"Email\",\n    PostalLetter: \"Surat\",\n    SuggestionBox: \"Kotak Saran\",\n    TextMessage: \"Pesan Teks\",\n    DirectSubmission: \"Pengiriman Langsung\",\n  };\n\n  const categoryGlobals = {\n    PAP: \"PAP\",\n    \"CSOS/NGO\": \"CSO/LSM\",\n    Government: \"Lembaga Pemerintah\",\n    LocalCommunities: \"Masyarakat Lokal (bukan PAP)\",\n    OtherCategory: \"Lainnya\",\n  };\n\n  const stakeHolderGlobals = {\n    WCS: \"WCS\",\n    DKP: \"DKP\",\n    \"BKSDA/National Park\": \"BKSDA/Taman Nasional\",\n    Others: \"Lainnya\",\n  };\n  \n  const evidenceGlobals = {\n   Existing: \"Ada\",\n   NotExisting: \"Tidak Ada\"\n    \n  }\n\n  const { koboFormData, data } = state;\n  state.taskId = data.data.gid;\n  \n  state.gsheetValues = [\n    [\n      state.taskId, //Asana Task ID\n      koboFormData.GrievanceId, //Grievance ID\n      koboFormData.GrievanceDate, //Tgl Keluhan,\n      koboFormData.GrievanceLocation, //Lokasi Keluhan\n      koboFormData.NameComplainant, //Nama Pemberi Keluhan\n      koboFormData.AddressComplainant, //Alamat Pemberi Keluhan\n      koboFormData.TelephoneComplainant, //Telp Pemberi Keluhan\n      formatGlobals[koboFormData.GrievanceReportFormat], //Cara Menerima Keluhan [mtuchi]\n      koboFormData.NameRecorder, //Nama penerima keluhan/ perekam\n      koboFormData.OrganizationRecorder, //Organisasi penerima keluhan/perekam\n      koboFormData.GrievanceDescription, //Deskripsi Keluhan (dari sudut pandang si pengeluh)\n      categoryGlobals[koboFormData.CategoryComplainant], //Kategori Pemberi Keluhan [mtuchi]\n      koboFormData.Topic, //Topik / Tema Keluhan\n      stakeHolderGlobals[koboFormData.StakeholdersResponsible], //Stakeholder yang Bertanggung Jawab Terhadap Keluhan [mtuhi]\n      evidenceGlobals[koboFormData.GrievanceEvidence], //Bukti Pendukung Keluhan\n\n    ],\n  ];\n\n  return state;\n});\n\ngetValues(\n  \"14xOFZ-iUgOizvtyDul52LhwWqFq8MUTmy2xLMEU3SRw\",\n  \"Form dan Log Case Keluhan!A:AD\",\n  (state) => {\n    const {\n      taskId,\n      data: { values },\n    } = state;\n\n    const rowIndex = values.findIndex((row) => row[\"0\"] === taskId);\n\n    if (rowIndex !== -1) {\n      state.updateRange = `Form dan Log Case Keluhan!A${rowIndex + 1}:AD${\n        rowIndex + 1\n      }`;\n    }\n\n    return state;\n  }\n);\n\nfn((state) => {\n  if (state.updateRange) {\n    console.log(\"Updating row\", state.updateRange);\n    return batchUpdateValues({\n      spreadsheetId: \"14xOFZ-iUgOizvtyDul52LhwWqFq8MUTmy2xLMEU3SRw\",\n      range: state.updateRange,\n      values: state.gsheetValues,\n    })(state);\n  }\n\n  console.log(\"Adding new row\");\n  return appendValues({\n    spreadsheetId: \"14xOFZ-iUgOizvtyDul52LhwWqFq8MUTmy2xLMEU3SRw\",\n    range: \"Form dan Log Case Keluhan!A2:AD2\",\n    values: state.gsheetValues,\n  })(state);\n});\n",
          "adaptor": "@openfn/language-googlesheets@3.0.14",
          "project_credential_id": null
        },
        "GRM11-Upsert-KSWS-Grievances-in-Asana": {
          "id": "ca8773da-099f-488e-875a-45dc8eb17060",
          "name": "GRM11 Upsert KSWS Grievances in Asana",
          "body": "fn(state => {   //Mapping table to map Kobo field CHOICES to Asana custom_fields_choices gids\n  const formatMapping = {\n GrievanceReport_CallProjectStaff: '1205638979644643',\n  GrievanceReport_Email: '1205638979644644',\n  GrievanceReport_HotlineCall: '1205638979644645',\n  GrievanceReport_InPerson: '1205638979644646',\n  GrievanceReport_PostalLetter: '1205638979644647',\n  GrievanceReport_TelegramMessage: '1205638979644648',\n  GrievanceReport_SuggestionBox: '1208201385471326',\n  GrievanceType_Comment: '1205638979644651',\n  GrievanceType_GeneralGrievance: '1205638979644652',\n  GrievanceType_ProjectGrievance: '1205638979644653',\n  GrievanceType_Suggestion: '1206939331510951',\n  GrievanceType_Request: '1206939331510952',\n  GrievanceType_ReportIllegalActivities: '1208201385471325',\n  CaseType_Boundary: '1205638979644656',\n  CaseType_CashForCommunities: '1205638979644657',\n  CaseType_CommunityPatrols: '1205638979644658',\n  CaseType_Governance: '1205638979644659',\n  CaseType_HumanWildlifeConflict: '1205638979644660',\n  CaseType_IllegalLogging: '1205638982100772',\n  CaseType_LandClearance: '1205638982100773',\n  CaseType_LandGrabbing: '1205638982100774',\n  CaseType_LawEnforcement: '1205638982100775',\n  CaseType_LeMemberThreat: '1205638982100776',\n  CaseType_LogsTransportation: '1205638982100777',\n  CaseType_NestProtection: '1205638982100778',\n  CaseType_PermissionLetterLogging: '1205638982100779',\n  CaseType_Poaching: '1205638982100780',\n  CaseType_ProjectImplementation: '1205638982100781',\n  CaseType_SignBoard: '1205638982100782',\n  CaseType_Threats: '1205638982100783',\n  CaseType_VillageFocalPerson: '1205638982100784',\n  CaseType_WcsStaffFraud: '1205638982100785',\n  ReponseNeeded_Yes: '1205638982100788',\n  ReponseNeeded_No: '1205638982100789',\n  ReponseNeeded_NotSure: '1205638982100790',\n  'GrievanceStatus _BeingReviewed': '1192850232576003',\n  'GrievanceStatus _NotAssigned': '1187328718760775',\n  'GrievanceStatus _Dismissed': '1187674280676653',\n  'GrievanceStatus _OnHold': '1187328718760778',\n  'GrievanceStatus _BeingInvestigated': '1187328718760776',\n  'GrievanceStatus _Resolved': '1187328718760777',\n  'GrievanceStatus _RemediationBeingMonitored': '1192772373678248' \n  };\n\n  return { ...state, formatMapping };\n});\n\nupsertTask(\n  dataValue('projectid'), //to dynamically map project id, assuming it's defined in the Get job. This projectID must be originally added to the Job that fetches data from Kobo.\n  //'1201382240883590', //hardcoded project id\n\n  {\n    externalId: \"name\", // Asana external Id field name (e.g., 'gid')\n    data: {\n      name: state =>\n        //`Grievance ID: ${dataValue('body.GrievanceID')(state)} (KoboID:${dataValue('body._id')(state)})`,\n          `${dataValue('body.GrievanceId')(state)} (KoboID:${dataValue('body._id')(state)})`,\n      projects: state => [`${dataValue('projectid')(state)}`], //to dynamically map project id, assuming it's defined in the Get job\n      //projects: ['1201382240883590'], //hardcoded Asana project id for Template Project\n      notes: state =>\n`Complaint in Khmer: ${dataValue('body.ComplaintKhmer')(state)}.\nComplaint English: ${dataValue('body.ComplaintEnglish')(state)}.`,\n      custom_fields: {\n          //This tells Asana what fields to update and how to locate them.\n          \n          //The statements below apply to Asana Fields that are for OPEN ENDED\n          //i.e. They accept FREE TEXT INPUT from the Kobo Form\n'1202329899911605': dataValue('body.ReporterName'),\n'1201884379104074': dataValue('body.GrievanceId'),\n'1205638664513483': dataValue('body.GrievanceDate'),\n'1205638669631280': dataValue('body.GrievanceTime'),\n'1202329899911619': dataValue('body.Village'),\n'1205638664513479': dataValue('body.NamePhone'),\n'1205638664513487': dataValue('body.Position'),\n'1205638664544001': dataValue('body.DateTimeLocationIncident'),\n'1205638664544009': dataValue('body.ActionTaken'),\n'1205638664555699': dataValue('body.ResponseGiven'),\n'1205638664544013': dataValue('body.ResultAction'),\n'1205638664544017': dataValue('body.Evidence'),\n'1205639008044145': dataValue('body.StatusExplanation'),\n'1205638664555695': dataValue('body.DateResolved'),\n'1205638664555691': dataValue('body.LTM reviewed'),\n          \n          //The statements below apply to Asana Fields that have multiplechoice / DropDown options\n          //i.e. They require that the user selects specific options from the Kobo Form dropdown list.\n          // These are the questions that require the MAPPING TABLES at the top of this page.\n          //The mapping key-value pairs are obtained using a console.log tht runs in the Fetch GID Job\n         /* '0000000000000000': dataValue('body.WhereGrievance'), */ //Grievance Date field missing in Asana\n'1205638979644642': state => state.formatMapping[\"GrievanceReport_\" + dataValue('body.GrievanceReport')(state)],\n'1205638979644650': state => state.formatMapping[\"GrievanceType_\" + dataValue('body.GrievanceType')(state)],\n'1205638979644655': state => state.formatMapping[\"CaseType_\" + dataValue('body.CaseType')(state)],\n'1205638982100787': state => state.formatMapping[\"ReponseNeeded_\" + dataValue('body.ReponseNeeded')(state)],\n'1187328718760774': state => state.formatMapping[\"GrievanceStatus _\" + dataValue('body.GrievanceStatus ')(state)],\n      },\n    },\n  },\n  state => {\n    console.log(JSON.stringify(state.data, null, 2)); //log data\n    return state;\n  }\n);\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        },
        "GRM19-Upsert-NPL-Grievances-in-Asana": {
          "id": "bfbc30d8-6748-4589-82f5-6e26e77bf422",
          "name": "GRM19 Upsert NPL Grievances in Asana",
          "body": "// Check out the Job Writing Guide for help getting started:\n// https://docs.openfn.org/documentation/jobs/job-writing-guide\n",
          "adaptor": "@openfn/language-asana@2.0.0",
          "project_credential_id": "3b707ca8-ef3c-4552-a536-ecb246664a13"
        }
      },
      "edges": {
        "webhook->Triage-jobs": {
          "enabled": true,
          "id": "9ba64e7d-d2c1-4277-8264-37bc3330d207",
          "target_job_id": "391a6b4f-289f-4409-853f-8dfa5966322b",
          "source_trigger_id": "bb70d6ab-4d28-4e04-8eb6-e91b1293a9a7",
          "condition_type": "always"
        },
        "Triage-jobs->GRM02-a-Upsert-Aceh-Grievances-in-Asana": {
          "enabled": true,
          "id": "0667be33-e4f2-404d-8c68-34c30d84f72c",
          "target_job_id": "487e3c2f-7d17-446f-8fce-997c28c9cc19",
          "source_job_id": "391a6b4f-289f-4409-853f-8dfa5966322b",
          "condition_type": "js_expression",
          "condition_label": "New Indonesia Form",
          "condition_expression": "state.data.formName == \"Aceh Grievance Form - TEST\""
        },
        "GRM02-a-Upsert-Aceh-Grievances-in-Asana->GRM02-b-Sync-to-GoogleSheets-Aceh": {
          "enabled": true,
          "id": "66649288-261c-4d06-83b2-7995deb7a87b",
          "target_job_id": "8cdb3784-3a4b-423f-8a1d-235c459e53c8",
          "source_job_id": "487e3c2f-7d17-446f-8fce-997c28c9cc19",
          "condition_type": "on_job_success"
        },
        "Triage-jobs->GRM11-Upsert-KSWS-Grievances-in-Asana": {
          "enabled": true,
          "id": "65bd2e52-ec1a-4955-8139-0261b3873e98",
          "target_job_id": "ca8773da-099f-488e-875a-45dc8eb17060",
          "source_job_id": "391a6b4f-289f-4409-853f-8dfa5966322b",
          "condition_type": "js_expression",
          "condition_label": "New Keo Seima Form",
          "condition_expression": "state.data.formName == \"Keo Seima GRM\""
        },
        "Triage-jobs->GRM19-Upsert-NPL-Grievances-in-Asana": {
          "enabled": true,
          "id": "deef72b4-9365-411d-8582-85f220e6c525",
          "target_job_id": "bfbc30d8-6748-4589-82f5-6e26e77bf422",
          "source_job_id": "391a6b4f-289f-4409-853f-8dfa5966322b",
          "condition_type": "js_expression",
          "condition_label": "New NPL form",
          "condition_expression": "state.data.formName == \"Feedback and Grievance Redress Mechanism - NPL\""
        }
      }
    }
  },
  "allow_support_access": false,
  "requires_mfa": false
}